@startuml

title __SQL's Class Diagram__\n

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.CaseChangingCharStream {
          ~ stream : CharStream
          ~ upper : boolean
          + CaseChangingCharStream()
          + LA()
          + consume()
          + getSourceName()
          + getText()
          + index()
          + mark()
          + release()
          + seek()
          + size()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.NoSqlDbSqlStatement {
          {static} + newNodaSqlOperators()
          + printScreen()
          + toDataframe()
          - NoSqlDbSqlStatement()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.NoSqlDbSqlStatementListener {
          - aggregateFunctions : Set<String>
          - aggregateOperators : List<AggregateOperator>
          - column : List<String>
          - columnDereference : boolean
          - comparison : String
          - coordinatesList : List<Coordinates>
          - filterOperatorSecondStage : List<FilterOperator>
          - filterOperatorsFirstStage : List<FilterOperator>
          - functionName : String
          - functionNumbers : List<Number>
          - functionStrings : List<String>
          - groupBy : List<String>
          - hashMap : Map<String, Integer>
          - havingCondition : boolean
          - limit : int
          {static} - logger : Logger
          - logicalOperator : List<String>
          - selectAll : boolean
          - selectOperator : List<String>
          - simpleDateFormat : SimpleDateFormat
          - sortOperators : List<SortOperator>
          - source : String
          + createFilter()
          + enterColumnReference()
          + enterComparisonOperator()
          + enterDecimalLiteral()
          + enterDereference()
          + enterFunctionCall()
          + enterIntegerLiteral()
          + enterLogicalBinary()
          + enterQueryNoWith()
          + enterQuerySpecification()
          + enterRowConstructor()
          + enterSelectAll()
          + enterStringLiteral()
          + exitFunctionCall()
          + exitGroupBy()
          + exitSelectSingle()
          + exitSortItem()
          + getNoSqlDbOperators()
          + getSource()
          {static} + newNodaSqlListener()
          + setNoSqlDbOperators()
          - NoSqlDbSqlStatementListener()
          - addAggregate()
          - addFilter()
          - checkForDoubleColumn()
          - checkForNoneNumbers()
          - checkForNoneStrings()
          - checkForNoneValues()
          - checkForSingleColumn()
          - checkForSingleNumber()
          - formFilterOperatorSecondStage()
          - formFinalFilter()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseBaseListener {
          + enterAddColumn()
          + enterAliasedRelation()
          + enterAlterFunction()
          + enterAlterRoutineCharacteristic()
          + enterAlterRoutineCharacteristics()
          + enterAnalyze()
          + enterArithmeticBinary()
          + enterArithmeticUnary()
          + enterArrayConstructor()
          + enterAtTimeZone()
          + enterBackQuotedIdentifier()
          + enterBaseType()
          + enterBasicStringLiteral()
          + enterBetween()
          + enterBinaryLiteral()
          + enterBooleanLiteral()
          + enterBooleanValue()
          + enterBoundedFrame()
          + enterCall()
          + enterCast()
          + enterColumnAliases()
          + enterColumnDefinition()
          + enterColumnReference()
          + enterCommit()
          + enterComparison()
          + enterComparisonOperator()
          + enterComparisonQuantifier()
          + enterConcatenation()
          + enterCreateFunction()
          + enterCreateRole()
          + enterCreateSchema()
          + enterCreateTable()
          + enterCreateTableAsSelect()
          + enterCreateView()
          + enterCube()
          + enterCurrentRoleGrantor()
          + enterCurrentRowBound()
          + enterCurrentUser()
          + enterCurrentUserGrantor()
          + enterDeallocate()
          + enterDecimalLiteral()
          + enterDelete()
          + enterDereference()
          + enterDescribeInput()
          + enterDescribeOutput()
          + enterDeterminism()
          + enterDigitIdentifier()
          + enterDistinctFrom()
          + enterDoubleLiteral()
          + enterDropColumn()
          + enterDropFunction()
          + enterDropRole()
          + enterDropSchema()
          + enterDropTable()
          + enterDropView()
          + enterEveryRule()
          + enterExecute()
          + enterExists()
          + enterExplain()
          + enterExplainFormat()
          + enterExplainType()
          + enterExpression()
          + enterExtract()
          + enterFilter()
          + enterFunctionCall()
          + enterGrant()
          + enterGrantRoles()
          + enterGroupBy()
          + enterGroupingOperation()
          + enterGroupingSet()
          + enterInList()
          + enterInSubquery()
          + enterInlineTable()
          + enterInsertInto()
          + enterIntegerLiteral()
          + enterInterval()
          + enterIntervalField()
          + enterIntervalLiteral()
          + enterIsolationLevel()
          + enterJoinCriteria()
          + enterJoinRelation()
          + enterJoinType()
          + enterLambda()
          + enterLanguage()
          + enterLateral()
          + enterLike()
          + enterLikeClause()
          + enterLogicalBinary()
          + enterLogicalNot()
          + enterMultipleGroupingSets()
          + enterNamedArgument()
          + enterNamedQuery()
          + enterNonReserved()
          + enterNormalForm()
          + enterNormalize()
          + enterNullCallClause()
          + enterNullLiteral()
          + enterNullPredicate()
          + enterNullTreatment()
          + enterNumericLiteral()
          + enterOver()
          + enterParameter()
          + enterParenthesizedExpression()
          + enterParenthesizedRelation()
          + enterPosition()
          + enterPositionalArgument()
          + enterPredicated()
          + enterPrepare()
          + enterPrivilege()
          + enterProperties()
          + enterProperty()
          + enterQualifiedName()
          + enterQuantifiedComparison()
          + enterQuery()
          + enterQueryNoWith()
          + enterQueryPrimaryDefault()
          + enterQuerySpecification()
          + enterQueryTermDefault()
          + enterQuotedIdentifier()
          + enterReadCommitted()
          + enterReadUncommitted()
          + enterRelationDefault()
          + enterRenameColumn()
          + enterRenameSchema()
          + enterRenameTable()
          + enterRepeatableRead()
          + enterResetSession()
          + enterReturnStatement()
          + enterRevoke()
          + enterRevokeRoles()
          + enterRolePrincipal()
          + enterRoles()
          + enterRollback()
          + enterRollup()
          + enterRoutineBody()
          + enterRoutineCharacteristic()
          + enterRoutineCharacteristics()
          + enterRowConstructor()
          + enterSampleType()
          + enterSampledRelation()
          + enterSearchedCase()
          + enterSelectAll()
          + enterSelectSingle()
          + enterSerializable()
          + enterSetOperation()
          + enterSetQuantifier()
          + enterSetRole()
          + enterSetSession()
          + enterShowCatalogs()
          + enterShowColumns()
          + enterShowCreateTable()
          + enterShowCreateView()
          + enterShowFunctions()
          + enterShowGrants()
          + enterShowRoleGrants()
          + enterShowRoles()
          + enterShowSchemas()
          + enterShowSession()
          + enterShowStats()
          + enterShowStatsForQuery()
          + enterShowTables()
          + enterSimpleCase()
          + enterSingleGroupingSet()
          + enterSingleStatement()
          + enterSortItem()
          + enterSpecialDateTimeFunction()
          + enterSpecifiedPrincipal()
          + enterSqlParameterDeclaration()
          + enterStandaloneExpression()
          + enterStandaloneRoutineBody()
          + enterStartTransaction()
          + enterStatementDefault()
          + enterStringLiteral()
          + enterSubquery()
          + enterSubqueryExpression()
          + enterSubqueryRelation()
          + enterSubscript()
          + enterSubstring()
          + enterTable()
          + enterTableElement()
          + enterTableName()
          + enterTimeZoneInterval()
          + enterTimeZoneString()
          + enterTransactionAccessMode()
          + enterType()
          + enterTypeConstructor()
          + enterTypeParameter()
          + enterTypes()
          + enterUnboundedFrame()
          + enterUnicodeStringLiteral()
          + enterUnnest()
          + enterUnquotedIdentifier()
          + enterUnspecifiedPrincipal()
          + enterUse()
          + enterUserPrincipal()
          + enterValueExpressionDefault()
          + enterWhenClause()
          + enterWindowFrame()
          + enterWith()
          + exitAddColumn()
          + exitAliasedRelation()
          + exitAlterFunction()
          + exitAlterRoutineCharacteristic()
          + exitAlterRoutineCharacteristics()
          + exitAnalyze()
          + exitArithmeticBinary()
          + exitArithmeticUnary()
          + exitArrayConstructor()
          + exitAtTimeZone()
          + exitBackQuotedIdentifier()
          + exitBaseType()
          + exitBasicStringLiteral()
          + exitBetween()
          + exitBinaryLiteral()
          + exitBooleanLiteral()
          + exitBooleanValue()
          + exitBoundedFrame()
          + exitCall()
          + exitCast()
          + exitColumnAliases()
          + exitColumnDefinition()
          + exitColumnReference()
          + exitCommit()
          + exitComparison()
          + exitComparisonOperator()
          + exitComparisonQuantifier()
          + exitConcatenation()
          + exitCreateFunction()
          + exitCreateRole()
          + exitCreateSchema()
          + exitCreateTable()
          + exitCreateTableAsSelect()
          + exitCreateView()
          + exitCube()
          + exitCurrentRoleGrantor()
          + exitCurrentRowBound()
          + exitCurrentUser()
          + exitCurrentUserGrantor()
          + exitDeallocate()
          + exitDecimalLiteral()
          + exitDelete()
          + exitDereference()
          + exitDescribeInput()
          + exitDescribeOutput()
          + exitDeterminism()
          + exitDigitIdentifier()
          + exitDistinctFrom()
          + exitDoubleLiteral()
          + exitDropColumn()
          + exitDropFunction()
          + exitDropRole()
          + exitDropSchema()
          + exitDropTable()
          + exitDropView()
          + exitEveryRule()
          + exitExecute()
          + exitExists()
          + exitExplain()
          + exitExplainFormat()
          + exitExplainType()
          + exitExpression()
          + exitExtract()
          + exitFilter()
          + exitFunctionCall()
          + exitGrant()
          + exitGrantRoles()
          + exitGroupBy()
          + exitGroupingOperation()
          + exitGroupingSet()
          + exitInList()
          + exitInSubquery()
          + exitInlineTable()
          + exitInsertInto()
          + exitIntegerLiteral()
          + exitInterval()
          + exitIntervalField()
          + exitIntervalLiteral()
          + exitIsolationLevel()
          + exitJoinCriteria()
          + exitJoinRelation()
          + exitJoinType()
          + exitLambda()
          + exitLanguage()
          + exitLateral()
          + exitLike()
          + exitLikeClause()
          + exitLogicalBinary()
          + exitLogicalNot()
          + exitMultipleGroupingSets()
          + exitNamedArgument()
          + exitNamedQuery()
          + exitNonReserved()
          + exitNormalForm()
          + exitNormalize()
          + exitNullCallClause()
          + exitNullLiteral()
          + exitNullPredicate()
          + exitNullTreatment()
          + exitNumericLiteral()
          + exitOver()
          + exitParameter()
          + exitParenthesizedExpression()
          + exitParenthesizedRelation()
          + exitPosition()
          + exitPositionalArgument()
          + exitPredicated()
          + exitPrepare()
          + exitPrivilege()
          + exitProperties()
          + exitProperty()
          + exitQualifiedName()
          + exitQuantifiedComparison()
          + exitQuery()
          + exitQueryNoWith()
          + exitQueryPrimaryDefault()
          + exitQuerySpecification()
          + exitQueryTermDefault()
          + exitQuotedIdentifier()
          + exitReadCommitted()
          + exitReadUncommitted()
          + exitRelationDefault()
          + exitRenameColumn()
          + exitRenameSchema()
          + exitRenameTable()
          + exitRepeatableRead()
          + exitResetSession()
          + exitReturnStatement()
          + exitRevoke()
          + exitRevokeRoles()
          + exitRolePrincipal()
          + exitRoles()
          + exitRollback()
          + exitRollup()
          + exitRoutineBody()
          + exitRoutineCharacteristic()
          + exitRoutineCharacteristics()
          + exitRowConstructor()
          + exitSampleType()
          + exitSampledRelation()
          + exitSearchedCase()
          + exitSelectAll()
          + exitSelectSingle()
          + exitSerializable()
          + exitSetOperation()
          + exitSetQuantifier()
          + exitSetRole()
          + exitSetSession()
          + exitShowCatalogs()
          + exitShowColumns()
          + exitShowCreateTable()
          + exitShowCreateView()
          + exitShowFunctions()
          + exitShowGrants()
          + exitShowRoleGrants()
          + exitShowRoles()
          + exitShowSchemas()
          + exitShowSession()
          + exitShowStats()
          + exitShowStatsForQuery()
          + exitShowTables()
          + exitSimpleCase()
          + exitSingleGroupingSet()
          + exitSingleStatement()
          + exitSortItem()
          + exitSpecialDateTimeFunction()
          + exitSpecifiedPrincipal()
          + exitSqlParameterDeclaration()
          + exitStandaloneExpression()
          + exitStandaloneRoutineBody()
          + exitStartTransaction()
          + exitStatementDefault()
          + exitStringLiteral()
          + exitSubquery()
          + exitSubqueryExpression()
          + exitSubqueryRelation()
          + exitSubscript()
          + exitSubstring()
          + exitTable()
          + exitTableElement()
          + exitTableName()
          + exitTimeZoneInterval()
          + exitTimeZoneString()
          + exitTransactionAccessMode()
          + exitType()
          + exitTypeConstructor()
          + exitTypeParameter()
          + exitTypes()
          + exitUnboundedFrame()
          + exitUnicodeStringLiteral()
          + exitUnnest()
          + exitUnquotedIdentifier()
          + exitUnspecifiedPrincipal()
          + exitUse()
          + exitUserPrincipal()
          + exitValueExpressionDefault()
          + exitWhenClause()
          + exitWindowFrame()
          + exitWith()
          + visitErrorNode()
          + visitTerminal()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseLexer {
          {static} + ADD : int
          {static} + ADMIN : int
          {static} + ALL : int
          {static} + ALTER : int
          {static} + ANALYZE : int
          {static} + AND : int
          {static} + ANY : int
          {static} + ARRAY : int
          {static} + AS : int
          {static} + ASC : int
          {static} + ASTERISK : int
          {static} + AT : int
          {static} + BACKQUOTED_IDENTIFIER : int
          {static} + BERNOULLI : int
          {static} + BETWEEN : int
          {static} + BINARY_LITERAL : int
          {static} + BRACKETED_COMMENT : int
          {static} + BY : int
          {static} + CALL : int
          {static} + CALLED : int
          {static} + CASCADE : int
          {static} + CASE : int
          {static} + CAST : int
          {static} + CATALOGS : int
          {static} + COLUMN : int
          {static} + COLUMNS : int
          {static} + COMMENT : int
          {static} + COMMIT : int
          {static} + COMMITTED : int
          {static} + CONCAT : int
          {static} + CONSTRAINT : int
          {static} + CREATE : int
          {static} + CROSS : int
          {static} + CUBE : int
          {static} + CURRENT : int
          {static} + CURRENT_DATE : int
          {static} + CURRENT_ROLE : int
          {static} + CURRENT_TIME : int
          {static} + CURRENT_TIMESTAMP : int
          {static} + CURRENT_USER : int
          {static} + DATA : int
          {static} + DATE : int
          {static} + DAY : int
          {static} + DEALLOCATE : int
          {static} + DECIMAL_VALUE : int
          {static} + DELETE : int
          {static} + DESC : int
          {static} + DESCRIBE : int
          {static} + DETERMINISTIC : int
          {static} + DIGIT_IDENTIFIER : int
          {static} + DISTINCT : int
          {static} + DISTRIBUTED : int
          {static} + DOUBLE_PRECISION : int
          {static} + DOUBLE_VALUE : int
          {static} + DROP : int
          {static} + ELSE : int
          {static} + END : int
          {static} + EQ : int
          {static} + ESCAPE : int
          {static} + EXCEPT : int
          {static} + EXCLUDING : int
          {static} + EXECUTE : int
          {static} + EXISTS : int
          {static} + EXPLAIN : int
          {static} + EXTRACT : int
          {static} + FALSE : int
          {static} + FILTER : int
          {static} + FIRST : int
          {static} + FOLLOWING : int
          {static} + FOR : int
          {static} + FORMAT : int
          {static} + FROM : int
          {static} + FULL : int
          {static} + FUNCTION : int
          {static} + FUNCTIONS : int
          {static} + GRANT : int
          {static} + GRANTED : int
          {static} + GRANTS : int
          {static} + GRAPHVIZ : int
          {static} + GROUP : int
          {static} + GROUPING : int
          {static} + GT : int
          {static} + GTE : int
          {static} + HAVING : int
          {static} + HOUR : int
          {static} + IDENTIFIER : int
          {static} + IF : int
          {static} + IGNORE : int
          {static} + IN : int
          {static} + INCLUDING : int
          {static} + INNER : int
          {static} + INPUT : int
          {static} + INSERT : int
          {static} + INTEGER_VALUE : int
          {static} + INTERSECT : int
          {static} + INTERVAL : int
          {static} + INTO : int
          {static} + IO : int
          {static} + IS : int
          {static} + ISOLATION : int
          {static} + JOIN : int
          {static} + JSON : int
          {static} + LANGUAGE : int
          {static} + LAST : int
          {static} + LATERAL : int
          {static} + LEFT : int
          {static} + LEVEL : int
          {static} + LIKE : int
          {static} + LIMIT : int
          {static} + LOCALTIME : int
          {static} + LOCALTIMESTAMP : int
          {static} + LOGICAL : int
          {static} + LT : int
          {static} + LTE : int
          {static} + MAP : int
          {static} + MINUS : int
          {static} + MINUTE : int
          {static} + MONTH : int
          {static} + NATURAL : int
          {static} + NEQ : int
          {static} + NFC : int
          {static} + NFD : int
          {static} + NFKC : int
          {static} + NFKD : int
          {static} + NO : int
          {static} + NONE : int
          {static} + NORMALIZE : int
          {static} + NOT : int
          {static} + NULL : int
          {static} + NULLIF : int
          {static} + NULLS : int
          {static} + ON : int
          {static} + ONLY : int
          {static} + OPTION : int
          {static} + OR : int
          {static} + ORDER : int
          {static} + ORDINALITY : int
          {static} + OUTER : int
          {static} + OUTPUT : int
          {static} + OVER : int
          {static} + PARTITION : int
          {static} + PARTITIONS : int
          {static} + PERCENT : int
          {static} + PLUS : int
          {static} + POSITION : int
          {static} + PRECEDING : int
          {static} + PREPARE : int
          {static} + PRIVILEGES : int
          {static} + PROPERTIES : int
          {static} + QUOTED_IDENTIFIER : int
          {static} + RANGE : int
          {static} + READ : int
          {static} + RECURSIVE : int
          {static} + RENAME : int
          {static} + REPEATABLE : int
          {static} + REPLACE : int
          {static} + RESET : int
          {static} + RESPECT : int
          {static} + RESTRICT : int
          {static} + RETURN : int
          {static} + RETURNS : int
          {static} + REVOKE : int
          {static} + RIGHT : int
          {static} + ROLE : int
          {static} + ROLES : int
          {static} + ROLLBACK : int
          {static} + ROLLUP : int
          {static} + ROW : int
          {static} + ROWS : int
          {static} + SCHEMA : int
          {static} + SCHEMAS : int
          {static} + SECOND : int
          {static} + SELECT : int
          {static} + SERIALIZABLE : int
          {static} + SESSION : int
          {static} + SET : int
          {static} + SETS : int
          {static} + SHOW : int
          {static} + SIMPLE_COMMENT : int
          {static} + SLASH : int
          {static} + SOME : int
          {static} + SQL : int
          {static} + START : int
          {static} + STATS : int
          {static} + STRING : int
          {static} + SUBSTRING : int
          {static} + SYSTEM : int
          {static} + TABLE : int
          {static} + TABLES : int
          {static} + TABLESAMPLE : int
          {static} + TEXT : int
          {static} + THEN : int
          {static} + TIME : int
          {static} + TIMESTAMP : int
          {static} + TIMESTAMP_WITH_TIME_ZONE : int
          {static} + TIME_WITH_TIME_ZONE : int
          {static} + TO : int
          {static} + TRANSACTION : int
          {static} + TRUE : int
          {static} + TRY_CAST : int
          {static} + TYPE : int
          {static} + T__0 : int
          {static} + T__1 : int
          {static} + T__2 : int
          {static} + T__3 : int
          {static} + T__4 : int
          {static} + T__5 : int
          {static} + T__6 : int
          {static} + T__7 : int
          {static} + T__8 : int
          {static} + UESCAPE : int
          {static} + UNBOUNDED : int
          {static} + UNCOMMITTED : int
          {static} + UNICODE_STRING : int
          {static} + UNION : int
          {static} + UNNEST : int
          {static} + UNRECOGNIZED : int
          {static} + USE : int
          {static} + USER : int
          {static} + USING : int
          {static} + VALIDATE : int
          {static} + VALUES : int
          {static} + VERBOSE : int
          {static} + VIEW : int
          {static} + VOCABULARY : Vocabulary
          {static} + WHEN : int
          {static} + WHERE : int
          {static} + WITH : int
          {static} + WORK : int
          {static} + WRITE : int
          {static} + WS : int
          {static} + YEAR : int
          {static} + ZONE : int
          {static} + _ATN : ATN
          {static} + _serializedATN : String
          {static} + channelNames : String[]
          {static} + modeNames : String[]
          {static} + ruleNames : String[]
          {static} + tokenNames : String[]
          {static} # _decisionToDFA : DFA[]
          {static} # _sharedContextCache : PredictionContextCache
          {static} - _LITERAL_NAMES : String[]
          {static} - _SYMBOLIC_NAMES : String[]
          + SqlBaseLexer()
          + getATN()
          + getChannelNames()
          + getGrammarFileName()
          + getModeNames()
          + getRuleNames()
          + getSerializedATN()
          + getTokenNames()
          + getVocabulary()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      interface gr.ds.unipi.noda.api.client.sql.SqlBaseListener {
          {abstract} + enterAddColumn()
          {abstract} + enterAliasedRelation()
          {abstract} + enterAlterFunction()
          {abstract} + enterAlterRoutineCharacteristic()
          {abstract} + enterAlterRoutineCharacteristics()
          {abstract} + enterAnalyze()
          {abstract} + enterArithmeticBinary()
          {abstract} + enterArithmeticUnary()
          {abstract} + enterArrayConstructor()
          {abstract} + enterAtTimeZone()
          {abstract} + enterBackQuotedIdentifier()
          {abstract} + enterBaseType()
          {abstract} + enterBasicStringLiteral()
          {abstract} + enterBetween()
          {abstract} + enterBinaryLiteral()
          {abstract} + enterBooleanLiteral()
          {abstract} + enterBooleanValue()
          {abstract} + enterBoundedFrame()
          {abstract} + enterCall()
          {abstract} + enterCast()
          {abstract} + enterColumnAliases()
          {abstract} + enterColumnDefinition()
          {abstract} + enterColumnReference()
          {abstract} + enterCommit()
          {abstract} + enterComparison()
          {abstract} + enterComparisonOperator()
          {abstract} + enterComparisonQuantifier()
          {abstract} + enterConcatenation()
          {abstract} + enterCreateFunction()
          {abstract} + enterCreateRole()
          {abstract} + enterCreateSchema()
          {abstract} + enterCreateTable()
          {abstract} + enterCreateTableAsSelect()
          {abstract} + enterCreateView()
          {abstract} + enterCube()
          {abstract} + enterCurrentRoleGrantor()
          {abstract} + enterCurrentRowBound()
          {abstract} + enterCurrentUser()
          {abstract} + enterCurrentUserGrantor()
          {abstract} + enterDeallocate()
          {abstract} + enterDecimalLiteral()
          {abstract} + enterDelete()
          {abstract} + enterDereference()
          {abstract} + enterDescribeInput()
          {abstract} + enterDescribeOutput()
          {abstract} + enterDeterminism()
          {abstract} + enterDigitIdentifier()
          {abstract} + enterDistinctFrom()
          {abstract} + enterDoubleLiteral()
          {abstract} + enterDropColumn()
          {abstract} + enterDropFunction()
          {abstract} + enterDropRole()
          {abstract} + enterDropSchema()
          {abstract} + enterDropTable()
          {abstract} + enterDropView()
          {abstract} + enterExecute()
          {abstract} + enterExists()
          {abstract} + enterExplain()
          {abstract} + enterExplainFormat()
          {abstract} + enterExplainType()
          {abstract} + enterExpression()
          {abstract} + enterExtract()
          {abstract} + enterFilter()
          {abstract} + enterFunctionCall()
          {abstract} + enterGrant()
          {abstract} + enterGrantRoles()
          {abstract} + enterGroupBy()
          {abstract} + enterGroupingOperation()
          {abstract} + enterGroupingSet()
          {abstract} + enterInList()
          {abstract} + enterInSubquery()
          {abstract} + enterInlineTable()
          {abstract} + enterInsertInto()
          {abstract} + enterIntegerLiteral()
          {abstract} + enterInterval()
          {abstract} + enterIntervalField()
          {abstract} + enterIntervalLiteral()
          {abstract} + enterIsolationLevel()
          {abstract} + enterJoinCriteria()
          {abstract} + enterJoinRelation()
          {abstract} + enterJoinType()
          {abstract} + enterLambda()
          {abstract} + enterLanguage()
          {abstract} + enterLateral()
          {abstract} + enterLike()
          {abstract} + enterLikeClause()
          {abstract} + enterLogicalBinary()
          {abstract} + enterLogicalNot()
          {abstract} + enterMultipleGroupingSets()
          {abstract} + enterNamedArgument()
          {abstract} + enterNamedQuery()
          {abstract} + enterNonReserved()
          {abstract} + enterNormalForm()
          {abstract} + enterNormalize()
          {abstract} + enterNullCallClause()
          {abstract} + enterNullLiteral()
          {abstract} + enterNullPredicate()
          {abstract} + enterNullTreatment()
          {abstract} + enterNumericLiteral()
          {abstract} + enterOver()
          {abstract} + enterParameter()
          {abstract} + enterParenthesizedExpression()
          {abstract} + enterParenthesizedRelation()
          {abstract} + enterPosition()
          {abstract} + enterPositionalArgument()
          {abstract} + enterPredicated()
          {abstract} + enterPrepare()
          {abstract} + enterPrivilege()
          {abstract} + enterProperties()
          {abstract} + enterProperty()
          {abstract} + enterQualifiedName()
          {abstract} + enterQuantifiedComparison()
          {abstract} + enterQuery()
          {abstract} + enterQueryNoWith()
          {abstract} + enterQueryPrimaryDefault()
          {abstract} + enterQuerySpecification()
          {abstract} + enterQueryTermDefault()
          {abstract} + enterQuotedIdentifier()
          {abstract} + enterReadCommitted()
          {abstract} + enterReadUncommitted()
          {abstract} + enterRelationDefault()
          {abstract} + enterRenameColumn()
          {abstract} + enterRenameSchema()
          {abstract} + enterRenameTable()
          {abstract} + enterRepeatableRead()
          {abstract} + enterResetSession()
          {abstract} + enterReturnStatement()
          {abstract} + enterRevoke()
          {abstract} + enterRevokeRoles()
          {abstract} + enterRolePrincipal()
          {abstract} + enterRoles()
          {abstract} + enterRollback()
          {abstract} + enterRollup()
          {abstract} + enterRoutineBody()
          {abstract} + enterRoutineCharacteristic()
          {abstract} + enterRoutineCharacteristics()
          {abstract} + enterRowConstructor()
          {abstract} + enterSampleType()
          {abstract} + enterSampledRelation()
          {abstract} + enterSearchedCase()
          {abstract} + enterSelectAll()
          {abstract} + enterSelectSingle()
          {abstract} + enterSerializable()
          {abstract} + enterSetOperation()
          {abstract} + enterSetQuantifier()
          {abstract} + enterSetRole()
          {abstract} + enterSetSession()
          {abstract} + enterShowCatalogs()
          {abstract} + enterShowColumns()
          {abstract} + enterShowCreateTable()
          {abstract} + enterShowCreateView()
          {abstract} + enterShowFunctions()
          {abstract} + enterShowGrants()
          {abstract} + enterShowRoleGrants()
          {abstract} + enterShowRoles()
          {abstract} + enterShowSchemas()
          {abstract} + enterShowSession()
          {abstract} + enterShowStats()
          {abstract} + enterShowStatsForQuery()
          {abstract} + enterShowTables()
          {abstract} + enterSimpleCase()
          {abstract} + enterSingleGroupingSet()
          {abstract} + enterSingleStatement()
          {abstract} + enterSortItem()
          {abstract} + enterSpecialDateTimeFunction()
          {abstract} + enterSpecifiedPrincipal()
          {abstract} + enterSqlParameterDeclaration()
          {abstract} + enterStandaloneExpression()
          {abstract} + enterStandaloneRoutineBody()
          {abstract} + enterStartTransaction()
          {abstract} + enterStatementDefault()
          {abstract} + enterStringLiteral()
          {abstract} + enterSubquery()
          {abstract} + enterSubqueryExpression()
          {abstract} + enterSubqueryRelation()
          {abstract} + enterSubscript()
          {abstract} + enterSubstring()
          {abstract} + enterTable()
          {abstract} + enterTableElement()
          {abstract} + enterTableName()
          {abstract} + enterTimeZoneInterval()
          {abstract} + enterTimeZoneString()
          {abstract} + enterTransactionAccessMode()
          {abstract} + enterType()
          {abstract} + enterTypeConstructor()
          {abstract} + enterTypeParameter()
          {abstract} + enterTypes()
          {abstract} + enterUnboundedFrame()
          {abstract} + enterUnicodeStringLiteral()
          {abstract} + enterUnnest()
          {abstract} + enterUnquotedIdentifier()
          {abstract} + enterUnspecifiedPrincipal()
          {abstract} + enterUse()
          {abstract} + enterUserPrincipal()
          {abstract} + enterValueExpressionDefault()
          {abstract} + enterWhenClause()
          {abstract} + enterWindowFrame()
          {abstract} + enterWith()
          {abstract} + exitAddColumn()
          {abstract} + exitAliasedRelation()
          {abstract} + exitAlterFunction()
          {abstract} + exitAlterRoutineCharacteristic()
          {abstract} + exitAlterRoutineCharacteristics()
          {abstract} + exitAnalyze()
          {abstract} + exitArithmeticBinary()
          {abstract} + exitArithmeticUnary()
          {abstract} + exitArrayConstructor()
          {abstract} + exitAtTimeZone()
          {abstract} + exitBackQuotedIdentifier()
          {abstract} + exitBaseType()
          {abstract} + exitBasicStringLiteral()
          {abstract} + exitBetween()
          {abstract} + exitBinaryLiteral()
          {abstract} + exitBooleanLiteral()
          {abstract} + exitBooleanValue()
          {abstract} + exitBoundedFrame()
          {abstract} + exitCall()
          {abstract} + exitCast()
          {abstract} + exitColumnAliases()
          {abstract} + exitColumnDefinition()
          {abstract} + exitColumnReference()
          {abstract} + exitCommit()
          {abstract} + exitComparison()
          {abstract} + exitComparisonOperator()
          {abstract} + exitComparisonQuantifier()
          {abstract} + exitConcatenation()
          {abstract} + exitCreateFunction()
          {abstract} + exitCreateRole()
          {abstract} + exitCreateSchema()
          {abstract} + exitCreateTable()
          {abstract} + exitCreateTableAsSelect()
          {abstract} + exitCreateView()
          {abstract} + exitCube()
          {abstract} + exitCurrentRoleGrantor()
          {abstract} + exitCurrentRowBound()
          {abstract} + exitCurrentUser()
          {abstract} + exitCurrentUserGrantor()
          {abstract} + exitDeallocate()
          {abstract} + exitDecimalLiteral()
          {abstract} + exitDelete()
          {abstract} + exitDereference()
          {abstract} + exitDescribeInput()
          {abstract} + exitDescribeOutput()
          {abstract} + exitDeterminism()
          {abstract} + exitDigitIdentifier()
          {abstract} + exitDistinctFrom()
          {abstract} + exitDoubleLiteral()
          {abstract} + exitDropColumn()
          {abstract} + exitDropFunction()
          {abstract} + exitDropRole()
          {abstract} + exitDropSchema()
          {abstract} + exitDropTable()
          {abstract} + exitDropView()
          {abstract} + exitExecute()
          {abstract} + exitExists()
          {abstract} + exitExplain()
          {abstract} + exitExplainFormat()
          {abstract} + exitExplainType()
          {abstract} + exitExpression()
          {abstract} + exitExtract()
          {abstract} + exitFilter()
          {abstract} + exitFunctionCall()
          {abstract} + exitGrant()
          {abstract} + exitGrantRoles()
          {abstract} + exitGroupBy()
          {abstract} + exitGroupingOperation()
          {abstract} + exitGroupingSet()
          {abstract} + exitInList()
          {abstract} + exitInSubquery()
          {abstract} + exitInlineTable()
          {abstract} + exitInsertInto()
          {abstract} + exitIntegerLiteral()
          {abstract} + exitInterval()
          {abstract} + exitIntervalField()
          {abstract} + exitIntervalLiteral()
          {abstract} + exitIsolationLevel()
          {abstract} + exitJoinCriteria()
          {abstract} + exitJoinRelation()
          {abstract} + exitJoinType()
          {abstract} + exitLambda()
          {abstract} + exitLanguage()
          {abstract} + exitLateral()
          {abstract} + exitLike()
          {abstract} + exitLikeClause()
          {abstract} + exitLogicalBinary()
          {abstract} + exitLogicalNot()
          {abstract} + exitMultipleGroupingSets()
          {abstract} + exitNamedArgument()
          {abstract} + exitNamedQuery()
          {abstract} + exitNonReserved()
          {abstract} + exitNormalForm()
          {abstract} + exitNormalize()
          {abstract} + exitNullCallClause()
          {abstract} + exitNullLiteral()
          {abstract} + exitNullPredicate()
          {abstract} + exitNullTreatment()
          {abstract} + exitNumericLiteral()
          {abstract} + exitOver()
          {abstract} + exitParameter()
          {abstract} + exitParenthesizedExpression()
          {abstract} + exitParenthesizedRelation()
          {abstract} + exitPosition()
          {abstract} + exitPositionalArgument()
          {abstract} + exitPredicated()
          {abstract} + exitPrepare()
          {abstract} + exitPrivilege()
          {abstract} + exitProperties()
          {abstract} + exitProperty()
          {abstract} + exitQualifiedName()
          {abstract} + exitQuantifiedComparison()
          {abstract} + exitQuery()
          {abstract} + exitQueryNoWith()
          {abstract} + exitQueryPrimaryDefault()
          {abstract} + exitQuerySpecification()
          {abstract} + exitQueryTermDefault()
          {abstract} + exitQuotedIdentifier()
          {abstract} + exitReadCommitted()
          {abstract} + exitReadUncommitted()
          {abstract} + exitRelationDefault()
          {abstract} + exitRenameColumn()
          {abstract} + exitRenameSchema()
          {abstract} + exitRenameTable()
          {abstract} + exitRepeatableRead()
          {abstract} + exitResetSession()
          {abstract} + exitReturnStatement()
          {abstract} + exitRevoke()
          {abstract} + exitRevokeRoles()
          {abstract} + exitRolePrincipal()
          {abstract} + exitRoles()
          {abstract} + exitRollback()
          {abstract} + exitRollup()
          {abstract} + exitRoutineBody()
          {abstract} + exitRoutineCharacteristic()
          {abstract} + exitRoutineCharacteristics()
          {abstract} + exitRowConstructor()
          {abstract} + exitSampleType()
          {abstract} + exitSampledRelation()
          {abstract} + exitSearchedCase()
          {abstract} + exitSelectAll()
          {abstract} + exitSelectSingle()
          {abstract} + exitSerializable()
          {abstract} + exitSetOperation()
          {abstract} + exitSetQuantifier()
          {abstract} + exitSetRole()
          {abstract} + exitSetSession()
          {abstract} + exitShowCatalogs()
          {abstract} + exitShowColumns()
          {abstract} + exitShowCreateTable()
          {abstract} + exitShowCreateView()
          {abstract} + exitShowFunctions()
          {abstract} + exitShowGrants()
          {abstract} + exitShowRoleGrants()
          {abstract} + exitShowRoles()
          {abstract} + exitShowSchemas()
          {abstract} + exitShowSession()
          {abstract} + exitShowStats()
          {abstract} + exitShowStatsForQuery()
          {abstract} + exitShowTables()
          {abstract} + exitSimpleCase()
          {abstract} + exitSingleGroupingSet()
          {abstract} + exitSingleStatement()
          {abstract} + exitSortItem()
          {abstract} + exitSpecialDateTimeFunction()
          {abstract} + exitSpecifiedPrincipal()
          {abstract} + exitSqlParameterDeclaration()
          {abstract} + exitStandaloneExpression()
          {abstract} + exitStandaloneRoutineBody()
          {abstract} + exitStartTransaction()
          {abstract} + exitStatementDefault()
          {abstract} + exitStringLiteral()
          {abstract} + exitSubquery()
          {abstract} + exitSubqueryExpression()
          {abstract} + exitSubqueryRelation()
          {abstract} + exitSubscript()
          {abstract} + exitSubstring()
          {abstract} + exitTable()
          {abstract} + exitTableElement()
          {abstract} + exitTableName()
          {abstract} + exitTimeZoneInterval()
          {abstract} + exitTimeZoneString()
          {abstract} + exitTransactionAccessMode()
          {abstract} + exitType()
          {abstract} + exitTypeConstructor()
          {abstract} + exitTypeParameter()
          {abstract} + exitTypes()
          {abstract} + exitUnboundedFrame()
          {abstract} + exitUnicodeStringLiteral()
          {abstract} + exitUnnest()
          {abstract} + exitUnquotedIdentifier()
          {abstract} + exitUnspecifiedPrincipal()
          {abstract} + exitUse()
          {abstract} + exitUserPrincipal()
          {abstract} + exitValueExpressionDefault()
          {abstract} + exitWhenClause()
          {abstract} + exitWindowFrame()
          {abstract} + exitWith()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser {
          {static} + ADD : int
          {static} + ADMIN : int
          {static} + ALL : int
          {static} + ALTER : int
          {static} + ANALYZE : int
          {static} + AND : int
          {static} + ANY : int
          {static} + ARRAY : int
          {static} + AS : int
          {static} + ASC : int
          {static} + ASTERISK : int
          {static} + AT : int
          {static} + BACKQUOTED_IDENTIFIER : int
          {static} + BERNOULLI : int
          {static} + BETWEEN : int
          {static} + BINARY_LITERAL : int
          {static} + BRACKETED_COMMENT : int
          {static} + BY : int
          {static} + CALL : int
          {static} + CALLED : int
          {static} + CASCADE : int
          {static} + CASE : int
          {static} + CAST : int
          {static} + CATALOGS : int
          {static} + COLUMN : int
          {static} + COLUMNS : int
          {static} + COMMENT : int
          {static} + COMMIT : int
          {static} + COMMITTED : int
          {static} + CONCAT : int
          {static} + CONSTRAINT : int
          {static} + CREATE : int
          {static} + CROSS : int
          {static} + CUBE : int
          {static} + CURRENT : int
          {static} + CURRENT_DATE : int
          {static} + CURRENT_ROLE : int
          {static} + CURRENT_TIME : int
          {static} + CURRENT_TIMESTAMP : int
          {static} + CURRENT_USER : int
          {static} + DATA : int
          {static} + DATE : int
          {static} + DAY : int
          {static} + DEALLOCATE : int
          {static} + DECIMAL_VALUE : int
          {static} + DELETE : int
          {static} + DELIMITER : int
          {static} + DESC : int
          {static} + DESCRIBE : int
          {static} + DETERMINISTIC : int
          {static} + DIGIT_IDENTIFIER : int
          {static} + DISTINCT : int
          {static} + DISTRIBUTED : int
          {static} + DOUBLE_PRECISION : int
          {static} + DOUBLE_VALUE : int
          {static} + DROP : int
          {static} + ELSE : int
          {static} + END : int
          {static} + EQ : int
          {static} + ESCAPE : int
          {static} + EXCEPT : int
          {static} + EXCLUDING : int
          {static} + EXECUTE : int
          {static} + EXISTS : int
          {static} + EXPLAIN : int
          {static} + EXTRACT : int
          {static} + FALSE : int
          {static} + FILTER : int
          {static} + FIRST : int
          {static} + FOLLOWING : int
          {static} + FOR : int
          {static} + FORMAT : int
          {static} + FROM : int
          {static} + FULL : int
          {static} + FUNCTION : int
          {static} + FUNCTIONS : int
          {static} + GRANT : int
          {static} + GRANTED : int
          {static} + GRANTS : int
          {static} + GRAPHVIZ : int
          {static} + GROUP : int
          {static} + GROUPING : int
          {static} + GT : int
          {static} + GTE : int
          {static} + HAVING : int
          {static} + HOUR : int
          {static} + IDENTIFIER : int
          {static} + IF : int
          {static} + IGNORE : int
          {static} + IN : int
          {static} + INCLUDING : int
          {static} + INNER : int
          {static} + INPUT : int
          {static} + INSERT : int
          {static} + INTEGER_VALUE : int
          {static} + INTERSECT : int
          {static} + INTERVAL : int
          {static} + INTO : int
          {static} + IO : int
          {static} + IS : int
          {static} + ISOLATION : int
          {static} + JOIN : int
          {static} + JSON : int
          {static} + LANGUAGE : int
          {static} + LAST : int
          {static} + LATERAL : int
          {static} + LEFT : int
          {static} + LEVEL : int
          {static} + LIKE : int
          {static} + LIMIT : int
          {static} + LOCALTIME : int
          {static} + LOCALTIMESTAMP : int
          {static} + LOGICAL : int
          {static} + LT : int
          {static} + LTE : int
          {static} + MAP : int
          {static} + MINUS : int
          {static} + MINUTE : int
          {static} + MONTH : int
          {static} + NATURAL : int
          {static} + NEQ : int
          {static} + NFC : int
          {static} + NFD : int
          {static} + NFKC : int
          {static} + NFKD : int
          {static} + NO : int
          {static} + NONE : int
          {static} + NORMALIZE : int
          {static} + NOT : int
          {static} + NULL : int
          {static} + NULLIF : int
          {static} + NULLS : int
          {static} + ON : int
          {static} + ONLY : int
          {static} + OPTION : int
          {static} + OR : int
          {static} + ORDER : int
          {static} + ORDINALITY : int
          {static} + OUTER : int
          {static} + OUTPUT : int
          {static} + OVER : int
          {static} + PARTITION : int
          {static} + PARTITIONS : int
          {static} + PERCENT : int
          {static} + PLUS : int
          {static} + POSITION : int
          {static} + PRECEDING : int
          {static} + PREPARE : int
          {static} + PRIVILEGES : int
          {static} + PROPERTIES : int
          {static} + QUOTED_IDENTIFIER : int
          {static} + RANGE : int
          {static} + READ : int
          {static} + RECURSIVE : int
          {static} + RENAME : int
          {static} + REPEATABLE : int
          {static} + REPLACE : int
          {static} + RESET : int
          {static} + RESPECT : int
          {static} + RESTRICT : int
          {static} + RETURN : int
          {static} + RETURNS : int
          {static} + REVOKE : int
          {static} + RIGHT : int
          {static} + ROLE : int
          {static} + ROLES : int
          {static} + ROLLBACK : int
          {static} + ROLLUP : int
          {static} + ROW : int
          {static} + ROWS : int
          {static} + RULE_aliasedRelation : int
          {static} + RULE_alterRoutineCharacteristic : int
          {static} + RULE_alterRoutineCharacteristics : int
          {static} + RULE_baseType : int
          {static} + RULE_booleanExpression : int
          {static} + RULE_booleanValue : int
          {static} + RULE_callArgument : int
          {static} + RULE_columnAliases : int
          {static} + RULE_columnDefinition : int
          {static} + RULE_comparisonOperator : int
          {static} + RULE_comparisonQuantifier : int
          {static} + RULE_determinism : int
          {static} + RULE_explainOption : int
          {static} + RULE_expression : int
          {static} + RULE_filter : int
          {static} + RULE_frameBound : int
          {static} + RULE_grantor : int
          {static} + RULE_groupBy : int
          {static} + RULE_groupingElement : int
          {static} + RULE_groupingSet : int
          {static} + RULE_identifier : int
          {static} + RULE_interval : int
          {static} + RULE_intervalField : int
          {static} + RULE_joinCriteria : int
          {static} + RULE_joinType : int
          {static} + RULE_language : int
          {static} + RULE_levelOfIsolation : int
          {static} + RULE_likeClause : int
          {static} + RULE_namedQuery : int
          {static} + RULE_nonReserved : int
          {static} + RULE_normalForm : int
          {static} + RULE_nullCallClause : int
          {static} + RULE_nullTreatment : int
          {static} + RULE_number : int
          {static} + RULE_over : int
          {static} + RULE_predicate : int
          {static} + RULE_primaryExpression : int
          {static} + RULE_principal : int
          {static} + RULE_privilege : int
          {static} + RULE_properties : int
          {static} + RULE_property : int
          {static} + RULE_qualifiedName : int
          {static} + RULE_query : int
          {static} + RULE_queryNoWith : int
          {static} + RULE_queryPrimary : int
          {static} + RULE_querySpecification : int
          {static} + RULE_queryTerm : int
          {static} + RULE_relation : int
          {static} + RULE_relationPrimary : int
          {static} + RULE_returnStatement : int
          {static} + RULE_roles : int
          {static} + RULE_routineBody : int
          {static} + RULE_routineCharacteristic : int
          {static} + RULE_routineCharacteristics : int
          {static} + RULE_sampleType : int
          {static} + RULE_sampledRelation : int
          {static} + RULE_selectItem : int
          {static} + RULE_setQuantifier : int
          {static} + RULE_singleStatement : int
          {static} + RULE_sortItem : int
          {static} + RULE_sqlParameterDeclaration : int
          {static} + RULE_standaloneExpression : int
          {static} + RULE_standaloneRoutineBody : int
          {static} + RULE_statement : int
          {static} + RULE_string : int
          {static} + RULE_tableElement : int
          {static} + RULE_timeZoneSpecifier : int
          {static} + RULE_transactionMode : int
          {static} + RULE_type : int
          {static} + RULE_typeParameter : int
          {static} + RULE_types : int
          {static} + RULE_valueExpression : int
          {static} + RULE_whenClause : int
          {static} + RULE_windowFrame : int
          {static} + RULE_with : int
          {static} + SCHEMA : int
          {static} + SCHEMAS : int
          {static} + SECOND : int
          {static} + SELECT : int
          {static} + SERIALIZABLE : int
          {static} + SESSION : int
          {static} + SET : int
          {static} + SETS : int
          {static} + SHOW : int
          {static} + SIMPLE_COMMENT : int
          {static} + SLASH : int
          {static} + SOME : int
          {static} + SQL : int
          {static} + START : int
          {static} + STATS : int
          {static} + STRING : int
          {static} + SUBSTRING : int
          {static} + SYSTEM : int
          {static} + TABLE : int
          {static} + TABLES : int
          {static} + TABLESAMPLE : int
          {static} + TEXT : int
          {static} + THEN : int
          {static} + TIME : int
          {static} + TIMESTAMP : int
          {static} + TIMESTAMP_WITH_TIME_ZONE : int
          {static} + TIME_WITH_TIME_ZONE : int
          {static} + TO : int
          {static} + TRANSACTION : int
          {static} + TRUE : int
          {static} + TRY_CAST : int
          {static} + TYPE : int
          {static} + T__0 : int
          {static} + T__1 : int
          {static} + T__2 : int
          {static} + T__3 : int
          {static} + T__4 : int
          {static} + T__5 : int
          {static} + T__6 : int
          {static} + T__7 : int
          {static} + T__8 : int
          {static} + UESCAPE : int
          {static} + UNBOUNDED : int
          {static} + UNCOMMITTED : int
          {static} + UNICODE_STRING : int
          {static} + UNION : int
          {static} + UNNEST : int
          {static} + UNRECOGNIZED : int
          {static} + USE : int
          {static} + USER : int
          {static} + USING : int
          {static} + VALIDATE : int
          {static} + VALUES : int
          {static} + VERBOSE : int
          {static} + VIEW : int
          {static} + VOCABULARY : Vocabulary
          {static} + WHEN : int
          {static} + WHERE : int
          {static} + WITH : int
          {static} + WORK : int
          {static} + WRITE : int
          {static} + WS : int
          {static} + YEAR : int
          {static} + ZONE : int
          {static} + _ATN : ATN
          {static} + _serializedATN : String
          {static} + ruleNames : String[]
          {static} + tokenNames : String[]
          {static} # _decisionToDFA : DFA[]
          {static} # _sharedContextCache : PredictionContextCache
          {static} - _LITERAL_NAMES : String[]
          {static} - _SYMBOLIC_NAMES : String[]
          + SqlBaseParser()
          + aliasedRelation()
          + alterRoutineCharacteristic()
          + alterRoutineCharacteristics()
          + baseType()
          + booleanExpression()
          + booleanValue()
          + callArgument()
          + columnAliases()
          + columnDefinition()
          + comparisonOperator()
          + comparisonQuantifier()
          + determinism()
          + explainOption()
          + expression()
          + filter()
          + frameBound()
          + getATN()
          + getGrammarFileName()
          + getRuleNames()
          + getSerializedATN()
          + getTokenNames()
          + getVocabulary()
          + grantor()
          + groupBy()
          + groupingElement()
          + groupingSet()
          + identifier()
          + interval()
          + intervalField()
          + joinCriteria()
          + joinType()
          + language()
          + levelOfIsolation()
          + likeClause()
          + namedQuery()
          + nonReserved()
          + normalForm()
          + nullCallClause()
          + nullTreatment()
          + number()
          + over()
          + predicate()
          + primaryExpression()
          + principal()
          + privilege()
          + properties()
          + property()
          + qualifiedName()
          + query()
          + queryNoWith()
          + queryPrimary()
          + querySpecification()
          + queryTerm()
          + relation()
          + relationPrimary()
          + returnStatement()
          + roles()
          + routineBody()
          + routineCharacteristic()
          + routineCharacteristics()
          + sampleType()
          + sampledRelation()
          + selectItem()
          + sempred()
          + setQuantifier()
          + singleStatement()
          + sortItem()
          + sqlParameterDeclaration()
          + standaloneExpression()
          + standaloneRoutineBody()
          + statement()
          + string()
          + tableElement()
          + timeZoneSpecifier()
          + transactionMode()
          + type()
          + typeParameter()
          + types()
          + valueExpression()
          + whenClause()
          + windowFrame()
          + with()
          - booleanExpression()
          - booleanExpression_sempred()
          - primaryExpression()
          - primaryExpression_sempred()
          - queryTerm()
          - queryTerm_sempred()
          - relation()
          - relation_sempred()
          - type()
          - type_sempred()
          - valueExpression()
          - valueExpression_sempred()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AddColumnContext {
          + ADD()
          + ALTER()
          + AddColumnContext()
          + COLUMN()
          + TABLE()
          + columnDefinition()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AliasedRelationContext {
          + AS()
          + AliasedRelationContext()
          + columnAliases()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
          + relationPrimary()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AlterFunctionContext {
          + ALTER()
          + AlterFunctionContext()
          + FUNCTION()
          + alterRoutineCharacteristics()
          + enterRule()
          + exitRule()
          + qualifiedName()
          + types()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AlterRoutineCharacteristicContext {
          + AlterRoutineCharacteristicContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + nullCallClause()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AlterRoutineCharacteristicsContext {
          + AlterRoutineCharacteristicsContext()
          + alterRoutineCharacteristic()
          + alterRoutineCharacteristic()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AnalyzeContext {
          + ANALYZE()
          + AnalyzeContext()
          + WITH()
          + enterRule()
          + exitRule()
          + properties()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArithmeticBinaryContext {
          + operator : Token
          + ASTERISK()
          + ArithmeticBinaryContext()
          + MINUS()
          + PERCENT()
          + PLUS()
          + SLASH()
          + enterRule()
          + exitRule()
          + valueExpression()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArithmeticUnaryContext {
          + operator : Token
          + ArithmeticUnaryContext()
          + MINUS()
          + PLUS()
          + enterRule()
          + exitRule()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArrayConstructorContext {
          + ARRAY()
          + ArrayConstructorContext()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AtTimeZoneContext {
          + AT()
          + AtTimeZoneContext()
          + enterRule()
          + exitRule()
          + timeZoneSpecifier()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BackQuotedIdentifierContext {
          + BACKQUOTED_IDENTIFIER()
          + BackQuotedIdentifierContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BaseTypeContext {
          + BaseTypeContext()
          + DOUBLE_PRECISION()
          + TIMESTAMP_WITH_TIME_ZONE()
          + TIME_WITH_TIME_ZONE()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BasicStringLiteralContext {
          + BasicStringLiteralContext()
          + STRING()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BetweenContext {
          + AND()
          + BETWEEN()
          + BetweenContext()
          + NOT()
          + enterRule()
          + exitRule()
          + valueExpression()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BinaryLiteralContext {
          + BINARY_LITERAL()
          + BinaryLiteralContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext {
          + BooleanExpressionContext()
          + BooleanExpressionContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanLiteralContext {
          + BooleanLiteralContext()
          + booleanValue()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanValueContext {
          + BooleanValueContext()
          + FALSE()
          + TRUE()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BoundedFrameContext {
          + boundType : Token
          + BoundedFrameContext()
          + FOLLOWING()
          + PRECEDING()
          + enterRule()
          + exitRule()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CallArgumentContext {
          + CallArgumentContext()
          + CallArgumentContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CallContext {
          + CALL()
          + CallContext()
          + callArgument()
          + callArgument()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CastContext {
          + AS()
          + CAST()
          + CastContext()
          + TRY_CAST()
          + enterRule()
          + exitRule()
          + expression()
          + type()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnAliasesContext {
          + ColumnAliasesContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnDefinitionContext {
          + COMMENT()
          + ColumnDefinitionContext()
          + NOT()
          + NULL()
          + WITH()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
          + properties()
          + string()
          + type()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnReferenceContext {
          + ColumnReferenceContext()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CommitContext {
          + COMMIT()
          + CommitContext()
          + WORK()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonContext {
          + ComparisonContext()
          + comparisonOperator()
          + enterRule()
          + exitRule()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonOperatorContext {
          + ComparisonOperatorContext()
          + EQ()
          + GT()
          + GTE()
          + LT()
          + LTE()
          + NEQ()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonQuantifierContext {
          + ALL()
          + ANY()
          + ComparisonQuantifierContext()
          + SOME()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ConcatenationContext {
          + CONCAT()
          + ConcatenationContext()
          + enterRule()
          + exitRule()
          + valueExpression()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateFunctionContext {
          + COMMENT()
          + CREATE()
          + CreateFunctionContext()
          + FUNCTION()
          + OR()
          + REPLACE()
          + RETURNS()
          + enterRule()
          + exitRule()
          + qualifiedName()
          + routineBody()
          + routineCharacteristics()
          + sqlParameterDeclaration()
          + sqlParameterDeclaration()
          + string()
          + type()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateRoleContext {
          + ADMIN()
          + CREATE()
          + CreateRoleContext()
          + ROLE()
          + WITH()
          + enterRule()
          + exitRule()
          + grantor()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateSchemaContext {
          + CREATE()
          + CreateSchemaContext()
          + EXISTS()
          + IF()
          + NOT()
          + SCHEMA()
          + WITH()
          + enterRule()
          + exitRule()
          + properties()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateTableAsSelectContext {
          + AS()
          + COMMENT()
          + CREATE()
          + CreateTableAsSelectContext()
          + DATA()
          + EXISTS()
          + IF()
          + NO()
          + NOT()
          + TABLE()
          + WITH()
          + WITH()
          + columnAliases()
          + enterRule()
          + exitRule()
          + properties()
          + qualifiedName()
          + query()
          + string()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateTableContext {
          + COMMENT()
          + CREATE()
          + CreateTableContext()
          + EXISTS()
          + IF()
          + NOT()
          + TABLE()
          + WITH()
          + enterRule()
          + exitRule()
          + properties()
          + qualifiedName()
          + string()
          + tableElement()
          + tableElement()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateViewContext {
          + AS()
          + CREATE()
          + CreateViewContext()
          + OR()
          + REPLACE()
          + VIEW()
          + enterRule()
          + exitRule()
          + qualifiedName()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CubeContext {
          + CUBE()
          + CubeContext()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentRoleGrantorContext {
          + CURRENT_ROLE()
          + CurrentRoleGrantorContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentRowBoundContext {
          + CURRENT()
          + CurrentRowBoundContext()
          + ROW()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentUserContext {
          + name : Token
          + CURRENT_USER()
          + CurrentUserContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentUserGrantorContext {
          + CURRENT_USER()
          + CurrentUserGrantorContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DeallocateContext {
          + DEALLOCATE()
          + DeallocateContext()
          + PREPARE()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DecimalLiteralContext {
          + DECIMAL_VALUE()
          + DecimalLiteralContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DeleteContext {
          + DELETE()
          + DeleteContext()
          + FROM()
          + WHERE()
          + booleanExpression()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DereferenceContext {
          + DereferenceContext()
          + enterRule()
          + exitRule()
          + identifier()
          + primaryExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DescribeInputContext {
          + DESCRIBE()
          + DescribeInputContext()
          + INPUT()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DescribeOutputContext {
          + DESCRIBE()
          + DescribeOutputContext()
          + OUTPUT()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DeterminismContext {
          + DETERMINISTIC()
          + DeterminismContext()
          + NOT()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DigitIdentifierContext {
          + DIGIT_IDENTIFIER()
          + DigitIdentifierContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DistinctFromContext {
          + DISTINCT()
          + DistinctFromContext()
          + FROM()
          + IS()
          + NOT()
          + enterRule()
          + exitRule()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DoubleLiteralContext {
          + DOUBLE_VALUE()
          + DoubleLiteralContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropColumnContext {
          + ALTER()
          + COLUMN()
          + DROP()
          + DropColumnContext()
          + TABLE()
          + enterRule()
          + exitRule()
          + qualifiedName()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropFunctionContext {
          + DROP()
          + DropFunctionContext()
          + EXISTS()
          + FUNCTION()
          + IF()
          + enterRule()
          + exitRule()
          + qualifiedName()
          + types()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropRoleContext {
          + DROP()
          + DropRoleContext()
          + ROLE()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropSchemaContext {
          + CASCADE()
          + DROP()
          + DropSchemaContext()
          + EXISTS()
          + IF()
          + RESTRICT()
          + SCHEMA()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropTableContext {
          + DROP()
          + DropTableContext()
          + EXISTS()
          + IF()
          + TABLE()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropViewContext {
          + DROP()
          + DropViewContext()
          + EXISTS()
          + IF()
          + VIEW()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExecuteContext {
          + EXECUTE()
          + ExecuteContext()
          + USING()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExistsContext {
          + EXISTS()
          + ExistsContext()
          + enterRule()
          + exitRule()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainContext {
          + ANALYZE()
          + EXPLAIN()
          + ExplainContext()
          + VERBOSE()
          + enterRule()
          + exitRule()
          + explainOption()
          + explainOption()
          + statement()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainFormatContext {
          + value : Token
          + ExplainFormatContext()
          + FORMAT()
          + GRAPHVIZ()
          + JSON()
          + TEXT()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainOptionContext {
          + ExplainOptionContext()
          + ExplainOptionContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainTypeContext {
          + value : Token
          + DISTRIBUTED()
          + ExplainTypeContext()
          + IO()
          + LOGICAL()
          + TYPE()
          + VALIDATE()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExpressionContext {
          + ExpressionContext()
          + booleanExpression()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExtractContext {
          + EXTRACT()
          + ExtractContext()
          + FROM()
          + enterRule()
          + exitRule()
          + identifier()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FilterContext {
          + FILTER()
          + FilterContext()
          + WHERE()
          + booleanExpression()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FrameBoundContext {
          + FrameBoundContext()
          + FrameBoundContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FunctionCallContext {
          + ASTERISK()
          + BY()
          + FunctionCallContext()
          + ORDER()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
          + filter()
          + nullTreatment()
          + over()
          + qualifiedName()
          + setQuantifier()
          + sortItem()
          + sortItem()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantContext {
          + ALL()
          + GRANT()
          + GRANT()
          + GrantContext()
          + ON()
          + OPTION()
          + PRIVILEGES()
          + TABLE()
          + TO()
          + WITH()
          + enterRule()
          + exitRule()
          + principal()
          + privilege()
          + privilege()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantRolesContext {
          + ADMIN()
          + BY()
          + GRANT()
          + GRANTED()
          + GrantRolesContext()
          + OPTION()
          + TO()
          + WITH()
          + enterRule()
          + exitRule()
          + grantor()
          + principal()
          + principal()
          + roles()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantorContext {
          + GrantorContext()
          + GrantorContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupByContext {
          + GroupByContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + groupingElement()
          + groupingElement()
          + setQuantifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingElementContext {
          + GroupingElementContext()
          + GroupingElementContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingOperationContext {
          + GROUPING()
          + GroupingOperationContext()
          + enterRule()
          + exitRule()
          + qualifiedName()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingSetContext {
          + GroupingSetContext()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext {
          + IdentifierContext()
          + IdentifierContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InListContext {
          + IN()
          + InListContext()
          + NOT()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InSubqueryContext {
          + IN()
          + InSubqueryContext()
          + NOT()
          + enterRule()
          + exitRule()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InlineTableContext {
          + InlineTableContext()
          + VALUES()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InsertIntoContext {
          + INSERT()
          + INTO()
          + InsertIntoContext()
          + columnAliases()
          + enterRule()
          + exitRule()
          + qualifiedName()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntegerLiteralContext {
          + INTEGER_VALUE()
          + IntegerLiteralContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalContext {
          + sign : Token
          + INTERVAL()
          + IntervalContext()
          + MINUS()
          + PLUS()
          + TO()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + intervalField()
          + intervalField()
          + string()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalFieldContext {
          + DAY()
          + HOUR()
          + IntervalFieldContext()
          + MINUTE()
          + MONTH()
          + SECOND()
          + YEAR()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalLiteralContext {
          + IntervalLiteralContext()
          + enterRule()
          + exitRule()
          + interval()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IsolationLevelContext {
          + ISOLATION()
          + IsolationLevelContext()
          + LEVEL()
          + enterRule()
          + exitRule()
          + levelOfIsolation()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinCriteriaContext {
          + JoinCriteriaContext()
          + ON()
          + USING()
          + booleanExpression()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinRelationContext {
          + CROSS()
          + JOIN()
          + JoinRelationContext()
          + NATURAL()
          + enterRule()
          + exitRule()
          + joinCriteria()
          + joinType()
          + relation()
          + relation()
          + sampledRelation()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinTypeContext {
          + FULL()
          + INNER()
          + JoinTypeContext()
          + LEFT()
          + OUTER()
          + RIGHT()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LambdaContext {
          + LambdaContext()
          + enterRule()
          + exitRule()
          + expression()
          + identifier()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LanguageContext {
          + LanguageContext()
          + SQL()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LateralContext {
          + LATERAL()
          + LateralContext()
          + enterRule()
          + exitRule()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LevelOfIsolationContext {
          + LevelOfIsolationContext()
          + LevelOfIsolationContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LikeClauseContext {
          + optionType : Token
          + EXCLUDING()
          + INCLUDING()
          + LIKE()
          + LikeClauseContext()
          + PROPERTIES()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LikeContext {
          + ESCAPE()
          + LIKE()
          + LikeContext()
          + NOT()
          + enterRule()
          + exitRule()
          + valueExpression()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LogicalBinaryContext {
          + operator : Token
          + AND()
          + LogicalBinaryContext()
          + OR()
          + booleanExpression()
          + booleanExpression()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LogicalNotContext {
          + LogicalNotContext()
          + NOT()
          + booleanExpression()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.MultipleGroupingSetsContext {
          + GROUPING()
          + MultipleGroupingSetsContext()
          + SETS()
          + enterRule()
          + exitRule()
          + groupingSet()
          + groupingSet()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NamedArgumentContext {
          + NamedArgumentContext()
          + enterRule()
          + exitRule()
          + expression()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NamedQueryContext {
          + AS()
          + NamedQueryContext()
          + columnAliases()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NonReservedContext {
          + ADD()
          + ADMIN()
          + ALL()
          + ANALYZE()
          + ANY()
          + ARRAY()
          + ASC()
          + AT()
          + BERNOULLI()
          + CALL()
          + CALLED()
          + CASCADE()
          + CATALOGS()
          + COLUMN()
          + COLUMNS()
          + COMMENT()
          + COMMIT()
          + COMMITTED()
          + CURRENT()
          + CURRENT_ROLE()
          + DATA()
          + DATE()
          + DAY()
          + DESC()
          + DETERMINISTIC()
          + DISTRIBUTED()
          + EXCLUDING()
          + EXPLAIN()
          + FILTER()
          + FIRST()
          + FOLLOWING()
          + FORMAT()
          + FUNCTION()
          + FUNCTIONS()
          + GRANT()
          + GRANTED()
          + GRANTS()
          + GRAPHVIZ()
          + HOUR()
          + IF()
          + IGNORE()
          + INCLUDING()
          + INPUT()
          + INTERVAL()
          + IO()
          + ISOLATION()
          + JSON()
          + LANGUAGE()
          + LAST()
          + LATERAL()
          + LEVEL()
          + LIMIT()
          + LOGICAL()
          + MAP()
          + MINUTE()
          + MONTH()
          + NFC()
          + NFD()
          + NFKC()
          + NFKD()
          + NO()
          + NONE()
          + NULLIF()
          + NULLS()
          + NonReservedContext()
          + ONLY()
          + OPTION()
          + ORDINALITY()
          + OUTPUT()
          + OVER()
          + PARTITION()
          + PARTITIONS()
          + POSITION()
          + PRECEDING()
          + PRIVILEGES()
          + PROPERTIES()
          + RANGE()
          + READ()
          + RENAME()
          + REPEATABLE()
          + REPLACE()
          + RESET()
          + RESPECT()
          + RESTRICT()
          + RETURN()
          + RETURNS()
          + REVOKE()
          + ROLE()
          + ROLES()
          + ROLLBACK()
          + ROW()
          + ROWS()
          + SCHEMA()
          + SCHEMAS()
          + SECOND()
          + SERIALIZABLE()
          + SESSION()
          + SET()
          + SETS()
          + SHOW()
          + SOME()
          + SQL()
          + START()
          + STATS()
          + SUBSTRING()
          + SYSTEM()
          + TABLES()
          + TABLESAMPLE()
          + TEXT()
          + TIME()
          + TIMESTAMP()
          + TO()
          + TRANSACTION()
          + TRY_CAST()
          + TYPE()
          + UNBOUNDED()
          + UNCOMMITTED()
          + USE()
          + USER()
          + VALIDATE()
          + VERBOSE()
          + VIEW()
          + WORK()
          + WRITE()
          + YEAR()
          + ZONE()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NormalFormContext {
          + NFC()
          + NFD()
          + NFKC()
          + NFKD()
          + NormalFormContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NormalizeContext {
          + NORMALIZE()
          + NormalizeContext()
          + enterRule()
          + exitRule()
          + normalForm()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullCallClauseContext {
          + CALLED()
          + INPUT()
          + NULL()
          + NULL()
          + NullCallClauseContext()
          + ON()
          + RETURNS()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullLiteralContext {
          + NULL()
          + NullLiteralContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullPredicateContext {
          + IS()
          + NOT()
          + NULL()
          + NullPredicateContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullTreatmentContext {
          + IGNORE()
          + NULLS()
          + NullTreatmentContext()
          + RESPECT()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NumberContext {
          + NumberContext()
          + NumberContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NumericLiteralContext {
          + NumericLiteralContext()
          + enterRule()
          + exitRule()
          + number()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.OverContext {
          + partition : List<ExpressionContext>
          + BY()
          + BY()
          + ORDER()
          + OVER()
          + OverContext()
          + PARTITION()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
          + getRuleIndex()
          + sortItem()
          + sortItem()
          + windowFrame()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ParameterContext {
          + ParameterContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ParenthesizedExpressionContext {
          + ParenthesizedExpressionContext()
          + enterRule()
          + exitRule()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ParenthesizedRelationContext {
          + ParenthesizedRelationContext()
          + enterRule()
          + exitRule()
          + relation()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PositionContext {
          + IN()
          + POSITION()
          + PositionContext()
          + enterRule()
          + exitRule()
          + valueExpression()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PositionalArgumentContext {
          + PositionalArgumentContext()
          + enterRule()
          + exitRule()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext {
          + value : ParserRuleContext
          + PredicateContext()
          + PredicateContext()
          + PredicateContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicatedContext {
          + PredicatedContext()
          + enterRule()
          + exitRule()
          + predicate()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrepareContext {
          + FROM()
          + PREPARE()
          + PrepareContext()
          + enterRule()
          + exitRule()
          + identifier()
          + statement()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext {
          + PrimaryExpressionContext()
          + PrimaryExpressionContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrincipalContext {
          + PrincipalContext()
          + PrincipalContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrivilegeContext {
          + DELETE()
          + INSERT()
          + PrivilegeContext()
          + SELECT()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PropertiesContext {
          + PropertiesContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + property()
          + property()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PropertyContext {
          + EQ()
          + PropertyContext()
          + enterRule()
          + exitRule()
          + expression()
          + getRuleIndex()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext {
          + QualifiedNameContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuantifiedComparisonContext {
          + QuantifiedComparisonContext()
          + comparisonOperator()
          + comparisonQuantifier()
          + enterRule()
          + exitRule()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryContext {
          + QueryContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + queryNoWith()
          + with()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryNoWithContext {
          + limit : Token
          + ALL()
          + BY()
          + INTEGER_VALUE()
          + LIMIT()
          + ORDER()
          + QueryNoWithContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + queryTerm()
          + sortItem()
          + sortItem()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryContext {
          + QueryPrimaryContext()
          + QueryPrimaryContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryDefaultContext {
          + QueryPrimaryDefaultContext()
          + enterRule()
          + exitRule()
          + querySpecification()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuerySpecificationContext {
          + BY()
          + FROM()
          + GROUP()
          + HAVING()
          + QuerySpecificationContext()
          + SELECT()
          + WHERE()
          + booleanExpression()
          + booleanExpression()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + groupBy()
          + relation()
          + relation()
          + selectItem()
          + selectItem()
          + setQuantifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermContext {
          + QueryTermContext()
          + QueryTermContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermDefaultContext {
          + QueryTermDefaultContext()
          + enterRule()
          + exitRule()
          + queryPrimary()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuotedIdentifierContext {
          + QUOTED_IDENTIFIER()
          + QuotedIdentifierContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ReadCommittedContext {
          + COMMITTED()
          + READ()
          + ReadCommittedContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ReadUncommittedContext {
          + READ()
          + ReadUncommittedContext()
          + UNCOMMITTED()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationContext {
          + RelationContext()
          + RelationContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationDefaultContext {
          + RelationDefaultContext()
          + enterRule()
          + exitRule()
          + sampledRelation()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationPrimaryContext {
          + RelationPrimaryContext()
          + RelationPrimaryContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameColumnContext {
          + ALTER()
          + COLUMN()
          + RENAME()
          + RenameColumnContext()
          + TABLE()
          + TO()
          + enterRule()
          + exitRule()
          + identifier()
          + identifier()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameSchemaContext {
          + ALTER()
          + RENAME()
          + RenameSchemaContext()
          + SCHEMA()
          + TO()
          + enterRule()
          + exitRule()
          + identifier()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameTableContext {
          + ALTER()
          + RENAME()
          + RenameTableContext()
          + TABLE()
          + TO()
          + enterRule()
          + exitRule()
          + qualifiedName()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RepeatableReadContext {
          + READ()
          + REPEATABLE()
          + RepeatableReadContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ResetSessionContext {
          + RESET()
          + ResetSessionContext()
          + SESSION()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ReturnStatementContext {
          + RETURN()
          + ReturnStatementContext()
          + enterRule()
          + exitRule()
          + expression()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RevokeContext {
          + ALL()
          + FOR()
          + FROM()
          + GRANT()
          + ON()
          + OPTION()
          + PRIVILEGES()
          + REVOKE()
          + RevokeContext()
          + TABLE()
          + enterRule()
          + exitRule()
          + principal()
          + privilege()
          + privilege()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RevokeRolesContext {
          + ADMIN()
          + BY()
          + FOR()
          + FROM()
          + GRANTED()
          + OPTION()
          + REVOKE()
          + RevokeRolesContext()
          + enterRule()
          + exitRule()
          + grantor()
          + principal()
          + principal()
          + roles()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RolePrincipalContext {
          + ROLE()
          + RolePrincipalContext()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RolesContext {
          + RolesContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RollbackContext {
          + ROLLBACK()
          + RollbackContext()
          + WORK()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RollupContext {
          + ROLLUP()
          + RollupContext()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RoutineBodyContext {
          + RoutineBodyContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + returnStatement()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RoutineCharacteristicContext {
          + LANGUAGE()
          + RoutineCharacteristicContext()
          + determinism()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + language()
          + nullCallClause()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RoutineCharacteristicsContext {
          + RoutineCharacteristicsContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + routineCharacteristic()
          + routineCharacteristic()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RowConstructorContext {
          + ROW()
          + RowConstructorContext()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SampleTypeContext {
          + BERNOULLI()
          + SYSTEM()
          + SampleTypeContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SampledRelationContext {
          + SampledRelationContext()
          + TABLESAMPLE()
          + aliasedRelation()
          + enterRule()
          + exitRule()
          + expression()
          + getRuleIndex()
          + sampleType()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SearchedCaseContext {
          + CASE()
          + ELSE()
          + END()
          + SearchedCaseContext()
          + enterRule()
          + exitRule()
          + expression()
          + whenClause()
          + whenClause()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectAllContext {
          + ASTERISK()
          + SelectAllContext()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectItemContext {
          + SelectItemContext()
          + SelectItemContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectSingleContext {
          + AS()
          + SelectSingleContext()
          + enterRule()
          + exitRule()
          + expression()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SerializableContext {
          + SERIALIZABLE()
          + SerializableContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetOperationContext {
          + operator : Token
          + EXCEPT()
          + INTERSECT()
          + SetOperationContext()
          + UNION()
          + enterRule()
          + exitRule()
          + queryTerm()
          + queryTerm()
          + setQuantifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetQuantifierContext {
          + ALL()
          + DISTINCT()
          + SetQuantifierContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetRoleContext {
          + ALL()
          + NONE()
          + ROLE()
          + SET()
          + SetRoleContext()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetSessionContext {
          + EQ()
          + SESSION()
          + SET()
          + SetSessionContext()
          + enterRule()
          + exitRule()
          + expression()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCatalogsContext {
          + CATALOGS()
          + LIKE()
          + SHOW()
          + ShowCatalogsContext()
          + enterRule()
          + exitRule()
          + string()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowColumnsContext {
          + COLUMNS()
          + DESC()
          + DESCRIBE()
          + FROM()
          + IN()
          + SHOW()
          + ShowColumnsContext()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCreateTableContext {
          + CREATE()
          + SHOW()
          + ShowCreateTableContext()
          + TABLE()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCreateViewContext {
          + CREATE()
          + SHOW()
          + ShowCreateViewContext()
          + VIEW()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowFunctionsContext {
          + FUNCTIONS()
          + SHOW()
          + ShowFunctionsContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowGrantsContext {
          + GRANTS()
          + ON()
          + SHOW()
          + ShowGrantsContext()
          + TABLE()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowRoleGrantsContext {
          + FROM()
          + GRANTS()
          + IN()
          + ROLE()
          + SHOW()
          + ShowRoleGrantsContext()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowRolesContext {
          + CURRENT()
          + FROM()
          + IN()
          + ROLES()
          + SHOW()
          + ShowRolesContext()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowSchemasContext {
          + ESCAPE()
          + FROM()
          + IN()
          + LIKE()
          + SCHEMAS()
          + SHOW()
          + ShowSchemasContext()
          + enterRule()
          + exitRule()
          + identifier()
          + string()
          + string()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowSessionContext {
          + SESSION()
          + SHOW()
          + ShowSessionContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowStatsContext {
          + FOR()
          + SHOW()
          + STATS()
          + ShowStatsContext()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowStatsForQueryContext {
          + FOR()
          + SHOW()
          + STATS()
          + ShowStatsForQueryContext()
          + enterRule()
          + exitRule()
          + querySpecification()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowTablesContext {
          + ESCAPE()
          + FROM()
          + IN()
          + LIKE()
          + SHOW()
          + ShowTablesContext()
          + TABLES()
          + enterRule()
          + exitRule()
          + qualifiedName()
          + string()
          + string()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SimpleCaseContext {
          + CASE()
          + ELSE()
          + END()
          + SimpleCaseContext()
          + enterRule()
          + exitRule()
          + expression()
          + valueExpression()
          + whenClause()
          + whenClause()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SingleGroupingSetContext {
          + SingleGroupingSetContext()
          + enterRule()
          + exitRule()
          + groupingSet()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SingleStatementContext {
          + EOF()
          + SingleStatementContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + statement()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SortItemContext {
          + nullOrdering : Token
          + ordering : Token
          + ASC()
          + DESC()
          + FIRST()
          + LAST()
          + NULLS()
          + SortItemContext()
          + enterRule()
          + exitRule()
          + expression()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SpecialDateTimeFunctionContext {
          + name : Token
          + precision : Token
          + CURRENT_DATE()
          + CURRENT_TIME()
          + CURRENT_TIMESTAMP()
          + INTEGER_VALUE()
          + LOCALTIME()
          + LOCALTIMESTAMP()
          + SpecialDateTimeFunctionContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SpecifiedPrincipalContext {
          + SpecifiedPrincipalContext()
          + enterRule()
          + exitRule()
          + principal()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SqlParameterDeclarationContext {
          + SqlParameterDeclarationContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
          + type()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StandaloneExpressionContext {
          + EOF()
          + StandaloneExpressionContext()
          + enterRule()
          + exitRule()
          + expression()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StandaloneRoutineBodyContext {
          + EOF()
          + StandaloneRoutineBodyContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + routineBody()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StartTransactionContext {
          + START()
          + StartTransactionContext()
          + TRANSACTION()
          + enterRule()
          + exitRule()
          + transactionMode()
          + transactionMode()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext {
          + StatementContext()
          + StatementContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementDefaultContext {
          + StatementDefaultContext()
          + enterRule()
          + exitRule()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext {
          + StringContext()
          + StringContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringLiteralContext {
          + StringLiteralContext()
          + enterRule()
          + exitRule()
          + string()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubqueryContext {
          + SubqueryContext()
          + enterRule()
          + exitRule()
          + queryNoWith()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubqueryExpressionContext {
          + SubqueryExpressionContext()
          + enterRule()
          + exitRule()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubqueryRelationContext {
          + SubqueryRelationContext()
          + enterRule()
          + exitRule()
          + query()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubscriptContext {
          + SubscriptContext()
          + enterRule()
          + exitRule()
          + primaryExpression()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubstringContext {
          + FOR()
          + FROM()
          + SUBSTRING()
          + SubstringContext()
          + enterRule()
          + exitRule()
          + valueExpression()
          + valueExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TableContext {
          + TABLE()
          + TableContext()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TableElementContext {
          + TableElementContext()
          + columnDefinition()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + likeClause()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TableNameContext {
          + TableNameContext()
          + enterRule()
          + exitRule()
          + qualifiedName()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneIntervalContext {
          + TIME()
          + TimeZoneIntervalContext()
          + ZONE()
          + enterRule()
          + exitRule()
          + interval()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneSpecifierContext {
          + TimeZoneSpecifierContext()
          + TimeZoneSpecifierContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneStringContext {
          + TIME()
          + TimeZoneStringContext()
          + ZONE()
          + enterRule()
          + exitRule()
          + string()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TransactionAccessModeContext {
          + accessMode : Token
          + ONLY()
          + READ()
          + TransactionAccessModeContext()
          + WRITE()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TransactionModeContext {
          + TransactionModeContext()
          + TransactionModeContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeConstructorContext {
          + DOUBLE_PRECISION()
          + TypeConstructorContext()
          + enterRule()
          + exitRule()
          + identifier()
          + string()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeContext {
          + ARRAY()
          + INTERVAL()
          + MAP()
          + ROW()
          + TO()
          + TypeContext()
          + baseType()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + identifier()
          + identifier()
          + intervalField()
          + intervalField()
          + type()
          + type()
          + typeParameter()
          + typeParameter()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeParameterContext {
          + INTEGER_VALUE()
          + TypeParameterContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + type()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypesContext {
          + TypesContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + type()
          + type()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnboundedFrameContext {
          + boundType : Token
          + FOLLOWING()
          + PRECEDING()
          + UNBOUNDED()
          + UnboundedFrameContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnicodeStringLiteralContext {
          + STRING()
          + UESCAPE()
          + UNICODE_STRING()
          + UnicodeStringLiteralContext()
          + enterRule()
          + exitRule()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnnestContext {
          + ORDINALITY()
          + UNNEST()
          + UnnestContext()
          + WITH()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnquotedIdentifierContext {
          + IDENTIFIER()
          + UnquotedIdentifierContext()
          + enterRule()
          + exitRule()
          + nonReserved()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnspecifiedPrincipalContext {
          + UnspecifiedPrincipalContext()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UseContext {
          + USE()
          + UseContext()
          + enterRule()
          + exitRule()
          + identifier()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UserPrincipalContext {
          + USER()
          + UserPrincipalContext()
          + enterRule()
          + exitRule()
          + identifier()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext {
          + ValueExpressionContext()
          + ValueExpressionContext()
          + copyFrom()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionDefaultContext {
          + ValueExpressionDefaultContext()
          + enterRule()
          + exitRule()
          + primaryExpression()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WhenClauseContext {
          + THEN()
          + WHEN()
          + WhenClauseContext()
          + enterRule()
          + exitRule()
          + expression()
          + expression()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WindowFrameContext {
          + frameType : Token
          + AND()
          + BETWEEN()
          + RANGE()
          + ROWS()
          + WindowFrameContext()
          + enterRule()
          + exitRule()
          + frameBound()
          + frameBound()
          + getRuleIndex()
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.client {
    namespace sql {
      class gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WithContext {
          + RECURSIVE()
          + WITH()
          + WithContext()
          + enterRule()
          + exitRule()
          + getRuleIndex()
          + namedQuery()
          + namedQuery()
      }
    }
  }
  

  gr.ds.unipi.noda.api.client.sql.CaseChangingCharStream .up.|> org.antlr.v4.runtime.CharStream
  gr.ds.unipi.noda.api.client.sql.NoSqlDbSqlStatement o-- gr.ds.unipi.noda.api.core.nosqldb.NoSqlDbOperators : noSqlDbOperators
  gr.ds.unipi.noda.api.client.sql.NoSqlDbSqlStatementListener -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseBaseListener
  gr.ds.unipi.noda.api.client.sql.NoSqlDbSqlStatementListener o-- gr.ds.unipi.noda.api.core.operators.filterOperators.FilterOperator : finalFilterOperator
  gr.ds.unipi.noda.api.client.sql.NoSqlDbSqlStatementListener o-- gr.ds.unipi.noda.api.core.nosqldb.NoSqlDbOperators : noSqlDbOperators
  gr.ds.unipi.noda.api.client.sql.SqlBaseBaseListener .up.|> gr.ds.unipi.noda.api.client.sql.SqlBaseListener
  gr.ds.unipi.noda.api.client.sql.SqlBaseLexer -up-|> org.antlr.v4.runtime.Lexer
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser -up-|> org.antlr.v4.runtime.Parser
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AddColumnContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AliasedRelationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AlterFunctionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AlterRoutineCharacteristicContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AlterRoutineCharacteristicsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AnalyzeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArithmeticBinaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArithmeticUnaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArrayConstructorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AtTimeZoneContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BackQuotedIdentifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BaseTypeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BasicStringLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BetweenContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BinaryLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanValueContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BoundedFrameContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CallArgumentContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CallContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CastContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnAliasesContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnDefinitionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnReferenceContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CommitContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonOperatorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonQuantifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ConcatenationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateFunctionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateRoleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateSchemaContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateTableAsSelectContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateTableContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateViewContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CubeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentRoleGrantorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentRowBoundContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentUserContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentUserGrantorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DeallocateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DecimalLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DeleteContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DereferenceContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DescribeInputContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DescribeOutputContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DeterminismContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DigitIdentifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DistinctFromContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DoubleLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropColumnContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropFunctionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropRoleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropSchemaContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropTableContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropViewContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExecuteContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExistsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainFormatContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainOptionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainTypeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExtractContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FilterContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FrameBoundContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FunctionCallContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantRolesContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupByContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingElementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingOperationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingSetContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InListContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InSubqueryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InlineTableContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InsertIntoContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntegerLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalFieldContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IsolationLevelContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinCriteriaContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinRelationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinTypeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LambdaContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LanguageContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LateralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LevelOfIsolationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LikeClauseContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LikeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LogicalBinaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LogicalNotContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.MultipleGroupingSetsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NamedArgumentContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NamedQueryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NonReservedContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NormalFormContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NormalizeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullCallClauseContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullPredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullTreatmentContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NumberContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NumericLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.OverContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ParameterContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ParenthesizedExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ParenthesizedRelationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PositionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PositionalArgumentContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicatedContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrepareContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrincipalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrivilegeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PropertiesContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PropertyContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuantifiedComparisonContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryNoWithContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryDefaultContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuerySpecificationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermDefaultContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuotedIdentifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ReadCommittedContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ReadUncommittedContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationDefaultContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameColumnContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameSchemaContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameTableContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RepeatableReadContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ResetSessionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ReturnStatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RevokeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RevokeRolesContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RolePrincipalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RolesContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RollbackContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RollupContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RoutineBodyContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RoutineCharacteristicContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RoutineCharacteristicsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RowConstructorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SampleTypeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SampledRelationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SearchedCaseContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectAllContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectItemContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectSingleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SerializableContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetOperationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetQuantifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetRoleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetSessionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCatalogsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowColumnsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCreateTableContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCreateViewContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowFunctionsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowGrantsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowRoleGrantsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowRolesContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowSchemasContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowSessionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowStatsContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowStatsForQueryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowTablesContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SimpleCaseContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SingleGroupingSetContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SingleStatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SortItemContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SpecialDateTimeFunctionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SpecifiedPrincipalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SqlParameterDeclarationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StandaloneExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StandaloneRoutineBodyContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StartTransactionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementDefaultContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubqueryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubqueryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubqueryRelationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubscriptContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubstringContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TableContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TableElementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TableNameContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneIntervalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneSpecifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneStringContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TransactionAccessModeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TransactionModeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeConstructorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeParameterContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypesContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnboundedFrameContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnicodeStringLiteralContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnnestContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnquotedIdentifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnspecifiedPrincipalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UseContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UserPrincipalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionDefaultContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WhenClauseContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WindowFrameContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser +-down- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WithContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AddColumnContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AddColumnContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnDefinitionContext : column
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AddColumnContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext : tableName
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AliasedRelationContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AlterFunctionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AlterRoutineCharacteristicContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AlterRoutineCharacteristicsContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AnalyzeContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArithmeticBinaryContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArithmeticBinaryContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : left
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArithmeticBinaryContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : right
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArithmeticUnaryContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ArrayConstructorContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.AtTimeZoneContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BackQuotedIdentifierContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BaseTypeContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BasicStringLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BetweenContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BetweenContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : lower
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BetweenContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : upper
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BinaryLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanValueContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BoundedFrameContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FrameBoundContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CallArgumentContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CallContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CastContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnAliasesContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnDefinitionContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ColumnReferenceContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CommitContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : right
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonOperatorContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ComparisonQuantifierContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ConcatenationContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ConcatenationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : left
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ConcatenationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : right
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateFunctionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateFunctionContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext : functionName
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateFunctionContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeContext : returnType
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateRoleContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateRoleContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext : name
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateSchemaContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateTableAsSelectContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateTableContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CreateViewContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CubeContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingElementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentRoleGrantorContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentRowBoundContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FrameBoundContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentUserContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CurrentUserGrantorContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DeallocateContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DecimalLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NumberContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DeleteContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DereferenceContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DereferenceContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext : base
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DereferenceContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext : fieldName
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DescribeInputContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DescribeOutputContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DeterminismContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DigitIdentifierContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DistinctFromContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DistinctFromContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : right
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DoubleLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NumberContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropColumnContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropColumnContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext : column
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropColumnContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext : tableName
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropFunctionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropRoleContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropRoleContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext : name
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropSchemaContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropTableContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.DropViewContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExecuteContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExistsContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainFormatContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainOptionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainOptionContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainTypeContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExplainOptionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExpressionContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExtractContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FilterContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FrameBoundContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FunctionCallContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrincipalContext : grantee
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantRolesContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantorContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupByContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingElementContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingOperationContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingSetContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InListContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InSubqueryContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InlineTableContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.InsertIntoContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntegerLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NumberContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalFieldContext : from
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalFieldContext : to
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalFieldContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IsolationLevelContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TransactionModeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinCriteriaContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinRelationContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinRelationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationContext : left
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinRelationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SampledRelationContext : right
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinRelationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationContext : rightRelation
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.JoinTypeContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LambdaContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LanguageContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LateralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LevelOfIsolationContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LikeClauseContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LikeContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LikeContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : escape
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LikeContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : pattern
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LogicalBinaryContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LogicalBinaryContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext : left
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LogicalBinaryContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext : right
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LogicalNotContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.MultipleGroupingSetsContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingElementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NamedArgumentContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CallArgumentContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NamedQueryContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NamedQueryContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext : name
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NonReservedContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NormalFormContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NormalizeContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullCallClauseContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullPredicateContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NullTreatmentContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NumberContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.NumericLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.OverContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.OverContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExpressionContext : expression
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ParameterContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ParenthesizedExpressionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ParenthesizedRelationContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PositionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PositionalArgumentContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.CallArgumentContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicatedContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicatedContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : valueExpression
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrepareContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrincipalContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrivilegeContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PropertiesContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PropertyContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuantifiedComparisonContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PredicateContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryNoWithContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryDefaultContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuerySpecificationContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuerySpecificationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext : having
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuerySpecificationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.BooleanExpressionContext : where
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermDefaultContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QuotedIdentifierContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ReadCommittedContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LevelOfIsolationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ReadUncommittedContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LevelOfIsolationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationDefaultContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationPrimaryContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameColumnContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameColumnContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext : from
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameColumnContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext : tableName
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameColumnContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext : to
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameSchemaContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameTableContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameTableContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext : from
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RenameTableContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QualifiedNameContext : to
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RepeatableReadContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LevelOfIsolationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ResetSessionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ReturnStatementContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RevokeContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RevokeContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrincipalContext : grantee
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RevokeRolesContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RolePrincipalContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrincipalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RolesContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RollbackContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RollupContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingElementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RoutineBodyContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RoutineCharacteristicContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RoutineCharacteristicsContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RowConstructorContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SampleTypeContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SampledRelationContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SampledRelationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExpressionContext : percentage
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SearchedCaseContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SearchedCaseContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExpressionContext : elseExpression
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectAllContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectItemContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectItemContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectSingleContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SelectItemContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SerializableContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.LevelOfIsolationContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetOperationContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetOperationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermContext : left
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetOperationContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryTermContext : right
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetQuantifierContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetRoleContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetRoleContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext : role
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SetSessionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCatalogsContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCatalogsContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext : pattern
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowColumnsContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCreateTableContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowCreateViewContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowFunctionsContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowGrantsContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowRoleGrantsContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowRolesContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowSchemasContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowSchemasContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext : escape
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowSchemasContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext : pattern
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowSessionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowStatsContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowStatsForQueryContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowTablesContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowTablesContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext : escape
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ShowTablesContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext : pattern
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SimpleCaseContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SimpleCaseContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExpressionContext : elseExpression
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SingleGroupingSetContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GroupingElementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SingleStatementContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SortItemContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SpecialDateTimeFunctionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SpecifiedPrincipalContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.GrantorContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SqlParameterDeclarationContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StandaloneExpressionContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StandaloneRoutineBodyContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StartTransactionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementDefaultContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubqueryContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubqueryExpressionContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubqueryRelationContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubscriptContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubscriptContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext : index
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubscriptContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext : value
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.SubstringContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TableContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.QueryPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TableElementContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TableNameContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneIntervalContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneSpecifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneSpecifierContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneStringContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TimeZoneSpecifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TransactionAccessModeContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TransactionModeContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TransactionModeContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeConstructorContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrimaryExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalFieldContext : from
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IntervalFieldContext : to
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypeParameterContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.TypesContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnboundedFrameContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FrameBoundContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnicodeStringLiteralContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StringContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnnestContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.RelationPrimaryContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnquotedIdentifierContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UnspecifiedPrincipalContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrincipalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UseContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.StatementContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UseContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext : catalog
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UseContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.IdentifierContext : schema
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.UserPrincipalContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.PrincipalContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionDefaultContext -up-|> gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ValueExpressionContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WhenClauseContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WhenClauseContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExpressionContext : condition
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WhenClauseContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.ExpressionContext : result
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WindowFrameContext -up-|> org.antlr.v4.runtime.ParserRuleContext
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WindowFrameContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FrameBoundContext : end
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WindowFrameContext o-- gr.ds.unipi.noda.api.client.sql.SqlBaseParser.FrameBoundContext : start
  gr.ds.unipi.noda.api.client.sql.SqlBaseParser.WithContext -up-|> org.antlr.v4.runtime.ParserRuleContext


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
