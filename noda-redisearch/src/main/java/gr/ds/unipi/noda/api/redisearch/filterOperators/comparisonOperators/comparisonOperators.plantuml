@startuml

title __COMPARISONOPERATORS's Class Diagram__\n

  namespace gr.ds.unipi.noda.api.redisearch {
    namespace filterOperators {
      namespace comparisonOperators {
        abstract class gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.ComparisonOperator {
            - isNotEqual : boolean
            + getOperatorExpression()
            + getPostOperatorExpression()
            {abstract} # getOperatorField()
            {abstract} # getPostOperatorField()
            ~ ComparisonOperator()
            ~ ComparisonOperator()
            - getField()
        }
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    namespace filterOperators {
      namespace comparisonOperators {
        class gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorEqual {
            # getOperatorField()
            # getPostOperatorField()
            {static} ~ newOperatorEqual()
            {static} ~ newOperatorEqual()
            {static} ~ newOperatorEqual()
            {static} ~ newOperatorEqual()
            {static} ~ newOperatorEqual()
            {static} ~ newOperatorEqual()
            {static} ~ newOperatorEqual()
            - OperatorEqual()
        }
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    namespace filterOperators {
      namespace comparisonOperators {
        class gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorGreaterThan {
            # getOperatorField()
            # getPostOperatorField()
            {static} ~ newOperatorGreaterThan()
            {static} ~ newOperatorGreaterThan()
            {static} ~ newOperatorGreaterThan()
            {static} ~ newOperatorGreaterThan()
            {static} ~ newOperatorGreaterThan()
            - OperatorGreaterThan()
        }
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    namespace filterOperators {
      namespace comparisonOperators {
        class gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorGreaterThanEqual {
            # getOperatorField()
            # getPostOperatorField()
            {static} ~ newOperatorGreaterThanEqual()
            {static} ~ newOperatorGreaterThanEqual()
            {static} ~ newOperatorGreaterThanEqual()
            {static} ~ newOperatorGreaterThanEqual()
            {static} ~ newOperatorGreaterThanEqual()
            - OperatorGreaterThanEqual()
        }
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    namespace filterOperators {
      namespace comparisonOperators {
        class gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorLessThan {
            # getOperatorField()
            # getPostOperatorField()
            {static} ~ newOperatorLessThan()
            {static} ~ newOperatorLessThan()
            {static} ~ newOperatorLessThan()
            {static} ~ newOperatorLessThan()
            {static} ~ newOperatorLessThan()
            - OperatorLessThan()
        }
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    namespace filterOperators {
      namespace comparisonOperators {
        class gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorLessThanEqual {
            # getOperatorField()
            # getPostOperatorField()
            {static} ~ newOperatorLessThanEqual()
            {static} ~ newOperatorLessThanEqual()
            {static} ~ newOperatorLessThanEqual()
            {static} ~ newOperatorLessThanEqual()
            {static} ~ newOperatorLessThanEqual()
            - OperatorLessThanEqual()
        }
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    namespace filterOperators {
      namespace comparisonOperators {
        class gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorNotEqual {
            # getOperatorField()
            # getPostOperatorField()
            {static} ~ newOperatorNotEqual()
            {static} ~ newOperatorNotEqual()
            {static} ~ newOperatorNotEqual()
            {static} ~ newOperatorNotEqual()
            {static} ~ newOperatorNotEqual()
            {static} ~ newOperatorNotEqual()
            {static} ~ newOperatorNotEqual()
            - OperatorNotEqual()
        }
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    namespace filterOperators {
      namespace comparisonOperators {
        class gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.RangeValue {
            {static} - NEGATIVE_INFINITY : String
            {static} - POSITIVE_INFINITY : String
            - from : double
            - inclusiveMax : boolean
            - inclusiveMin : boolean
            - to : double
            + RangeValue()
            + inclusiveMax()
            + inclusiveMin()
            + isCombinable()
            + toString()
            {static} - appendNum()
        }
      }
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    namespace filterOperators {
      namespace comparisonOperators {
        class gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.RediSearchComparisonOperatorFactory {
            + newOperatorEq()
            + newOperatorEq()
            + newOperatorEq()
            + newOperatorEq()
            + newOperatorEq()
            + newOperatorEq()
            + newOperatorEq()
            + newOperatorEq()
            + newOperatorGt()
            + newOperatorGt()
            + newOperatorGt()
            + newOperatorGt()
            + newOperatorGt()
            + newOperatorGt()
            + newOperatorGte()
            + newOperatorGte()
            + newOperatorGte()
            + newOperatorGte()
            + newOperatorGte()
            + newOperatorGte()
            + newOperatorLt()
            + newOperatorLt()
            + newOperatorLt()
            + newOperatorLt()
            + newOperatorLt()
            + newOperatorLt()
            + newOperatorLte()
            + newOperatorLte()
            + newOperatorLte()
            + newOperatorLte()
            + newOperatorLte()
            + newOperatorLte()
            + newOperatorNe()
            + newOperatorNe()
            + newOperatorNe()
            + newOperatorNe()
            + newOperatorNe()
            + newOperatorNe()
            + newOperatorNe()
            + newOperatorNe()
        }
      }
    }
  }
  

  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.ComparisonOperator .up.|> gr.ds.unipi.noda.api.redisearch.filterOperators.RediSearchPostFilterOperator
  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.ComparisonOperator -up-|> gr.ds.unipi.noda.api.core.operators.filterOperators.comparisonOperators.ComparisonOperator
  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorEqual -up-|> gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.ComparisonOperator
  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorGreaterThan -up-|> gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.ComparisonOperator
  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorGreaterThanEqual -up-|> gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.ComparisonOperator
  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorLessThan -up-|> gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.ComparisonOperator
  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorLessThanEqual -up-|> gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.ComparisonOperator
  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.OperatorNotEqual -up-|> gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.ComparisonOperator
  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.RangeValue -up-|> io.redisearch.querybuilder.Value
  gr.ds.unipi.noda.api.redisearch.filterOperators.comparisonOperators.RediSearchComparisonOperatorFactory -up-|> gr.ds.unipi.noda.api.core.operators.filterOperators.comparisonOperators.BaseComparisonOperatorFactory


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
