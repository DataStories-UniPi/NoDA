@startuml

title __REDISEARCH's Class Diagram__\n

  namespace gr.ds.unipi.noda.api.redisearch {
    class gr.ds.unipi.noda.api.redisearch.RediSearchConnectionFactory {
        + closeConnection()
        + closeConnections()
        + noSqlDbOperators()
        # getBaseAggregateOperatorFactory()
        # getBaseComparisonOperatorFactory()
        # getBaseGeoSpatialOperatorFactory()
        # getBaseGeoTemporalOperatorFactory()
        # getBaseGeoTextualOperatorFactory()
        # getBaseLogicalOperatorFactory()
        # getBaseSortOperatorFactory()
        # getBaseTextualOperatorFactory()
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    class gr.ds.unipi.noda.api.redisearch.RediSearchConnectionManager {
        {static} - INSTANCE : RediSearchConnectionManager
        + closeConnection()
        + closeConnections()
        {static} ~ getInstance()
        - RediSearchConnectionManager()
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    class gr.ds.unipi.noda.api.redisearch.RediSearchConnector {
        - addresses : List<Entry<String, Integer>>
        - clientName : String
        - connectionTimeout : int
        - database : int
        - hostnameVerifier : HostnameVerifier
        - masterName : String
        - password : String
        - poolConfig : JedisPoolConfig
        - soTimeout : int
        - ssl : boolean
        - sslParameters : SSLParameters
        - sslSocketFactory : SSLSocketFactory
        + RediSearchConnector()
        + createConnection()
        + equals()
        + hashCode()
        {static} + newRediSearchConnector()
        - getSentinels()
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    class gr.ds.unipi.noda.api.redisearch.RediSearchOperators {
        - func : BiFunction<FilterOperator, FilterOperator[], Stream<FilterOperator>>
        + aggregate()
        + avg()
        + count()
        + distinct()
        + filter()
        + groupBy()
        + limit()
        + max()
        + min()
        + printScreen()
        + project()
        + sort()
        + sum()
        + toDataframe()
        {static} ~ newRedisOperators()
        ~ queryHelper()
        - RediSearchOperators()
        - applyQuery()
    }
  }
  

  namespace gr.ds.unipi.noda.api.redisearch {
    class gr.ds.unipi.noda.api.redisearch.RediSearchQueryHelper {
        - aggregationBuilder : AggregationBuilder
        - client : Client
        - groups : ArrayDeque<Group>
        - isAggregate : boolean
        - jedisPool : Pool<Jedis>
        - query : Query
        - queryBuilder : QueryNode
        + RediSearchQueryHelper()
        + applyAggregate()
        + applyGroupBy()
        + applyPostQuery()
        + applyPreQuery()
        + applyResultLimit()
        + applyReturnFields()
        + applySortBy()
        + executeAggregation()
        + getJedisResource()
        + isAggregate()
        + printResults()
        + setzRangeInfo()
        + totalResults()
        - enableAggregate()
        - getAggregationBuilder()
        - getQuery()
        - pendingAggregates()
        - provideQuery()
    }
  }
  

  gr.ds.unipi.noda.api.redisearch.RediSearchConnectionFactory -up-|> gr.ds.unipi.noda.api.core.nosqldb.NoSqlConnectionFactory
  gr.ds.unipi.noda.api.redisearch.RediSearchConnectionManager -up-|> gr.ds.unipi.noda.api.core.nosqldb.NoSqlDbConnectionManager
  gr.ds.unipi.noda.api.redisearch.RediSearchConnector .up.|> gr.ds.unipi.noda.api.core.nosqldb.NoSqlDbConnector
  gr.ds.unipi.noda.api.redisearch.RediSearchOperators -up-|> gr.ds.unipi.noda.api.core.nosqldb.NoSqlDbOperators
  gr.ds.unipi.noda.api.redisearch.RediSearchOperators o-- gr.ds.unipi.noda.api.redisearch.RediSearchQueryHelper : queryHelper
  gr.ds.unipi.noda.api.redisearch.RediSearchQueryHelper o-- gr.ds.unipi.noda.api.redisearch.filterOperators.geoperators.geographicalOperators.ZRangeInfo : zRangeInfo


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
